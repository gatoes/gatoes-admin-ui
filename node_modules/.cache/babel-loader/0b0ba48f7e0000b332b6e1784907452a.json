{"ast":null,"code":"import _classCallCheck from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/hardik/gatoes-admin-ui/src/components/regions/EditDeliveryRegion.js\";\nimport React, { Component, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field, SubmissionError, reset, FieldArray, formValueSelector } from 'redux-form';\nimport renderFieldLabelTransition from '../FormFields/renderFieldLabelTransition';\nimport renderField from '../FormFields/renderField';\nimport validate from './ValidateDeliveryRegion';\nimport { addDriverGeofencing, updateDriverGeofencingSuccess as _updateDriverGeofencingSuccess } from '../../actions/regions';\nvar EditDeliveryRegion = /*#__PURE__*/function (_Component) {\n  _inherits(EditDeliveryRegion, _Component);\n  function EditDeliveryRegion(props) {\n    var _this;\n    _classCallCheck(this, EditDeliveryRegion);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditDeliveryRegion).call(this, props));\n    _this.state = {\n      regionDetail: props.regionDetail,\n      geofence: [],\n      itemIndex: props.itemIndex\n    };\n    _this.bindSlider = _this.bindSlider.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(EditDeliveryRegion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      window.addEventListener('load', function () {\n        _this2.bindSlider();\n      });\n      if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n        this.bindSlider();\n      }\n    }\n  }, {\n    key: \"bindSlider\",\n    value: function bindSlider() {\n      var _this3 = this;\n      var drawingManager;\n      var selectedShape;\n      var colors = ['#1E90FF', '#FF1493', '#32CD32', '#FF8C00', '#4B0082'];\n      var selectedColor;\n      var colorButtons = {};\n      var posstr;\n      var pathstr, bndstr, cntstr, cntrstr, radstr, firstpathstr;\n      var google = window.google;\n      var reqlat = this.state.regionDetail.latitude ? this.state.regionDetail.latitude : 30.7333;\n      var reqlng = this.state.regionDetail.longitude ? this.state.regionDetail.longitude : 76.7794;\n      var patharray = [];\n      var coords = this.state.regionDetail.regionCoordinates;\n      var polygonCoords = [];\n      var clearSelection = function clearSelection() {\n        if (selectedShape) {\n          if (typeof selectedShape.setEditable == 'function') {\n            selectedShape.setEditable(false);\n          }\n          selectedShape = null;\n        }\n        curseldiv.innerHTML = \"<b>cursel</b>:\";\n      };\n      var updateCurSelText = function updateCurSelText(shape) {\n        patharray = [];\n        posstr = \"\" + selectedShape.position;\n        if (typeof selectedShape.position == 'object') {\n          posstr = selectedShape.position.toUrlValue();\n        }\n        pathstr = \"\" + selectedShape.getPath;\n        if (typeof selectedShape.getPath == 'function') {\n          for (var i = 0; i < selectedShape.getPath().getLength(); i++) {\n            patharray.push(selectedShape.getPath().getAt(i).toUrlValue().split(','));\n          }\n          patharray.push(selectedShape.getPath().getAt(0).toUrlValue().split(','));\n\n          // pathstr = \"[ \";\n          // for (var i = 0; i < selectedShape.getPath().getLength(); i++) {\n          //   // .toUrlValue(5) limits number of decimals, default is 6 but can do more\n          //   if(i == 0){\n          //     firstpathstr = selectedShape.getPath().getAt(i).toUrlValue();\n          //   }\n          //   pathstr += selectedShape.getPath().getAt(i).toUrlValue() + \" , \";\n          // }\n          // pathstr += firstpathstr;\n          // pathstr += \"]\";\n        }\n        bndstr = \"\" + selectedShape.getBounds;\n        cntstr = \"\" + selectedShape.getBounds;\n        if (typeof selectedShape.getBounds == 'function') {\n          var tmpbounds = selectedShape.getBounds();\n          cntstr = \"\" + tmpbounds.getCenter().toUrlValue();\n          bndstr = \"[NE: \" + tmpbounds.getNorthEast().toUrlValue() + \" SW: \" + tmpbounds.getSouthWest().toUrlValue() + \"]\";\n        }\n        cntrstr = \"\" + selectedShape.getCenter;\n        if (typeof selectedShape.getCenter == 'function') {\n          cntrstr = \"\" + selectedShape.getCenter().toUrlValue();\n        }\n        radstr = \"\" + selectedShape.getRadius;\n        if (typeof selectedShape.getRadius == 'function') {\n          radstr = \"\" + selectedShape.getRadius();\n        }\n\n        // pathstr = pathstr.split(pathstr,' , ');\n        _this3.props.change('regionCoordinates', patharray);\n        curseldiv.innerHTML = \"<b>cursel</b>: \" + selectedShape.type + \" \" + selectedShape + \"; <i>pos</i>: \" + posstr + \" ; <i>path</i>: \" + pathstr + \" ; <i>bounds</i>: \" + bndstr + \" ; <i>Cb</i>: \" + cntstr + \" ; <i>radius</i>: \" + radstr + \" ; <i>Cr</i>: \" + cntrstr;\n      };\n      var setSelection = function setSelection(shape, isNotMarker) {\n        clearSelection();\n        selectedShape = shape;\n        if (isNotMarker) shape.setEditable(true);\n        selectColor(shape.get('fillColor') || shape.get('strokeColor'));\n        updateCurSelText(shape);\n      };\n      var deleteSelectedShape = function deleteSelectedShape() {\n        if (selectedShape) {\n          selectedShape.setMap(null);\n          patharray = [];\n          _this3.props.change('regionCoordinates', []);\n        }\n      };\n      var selectColor = function selectColor(color) {\n        selectedColor = color;\n        for (var i = 0; i < colors.length; ++i) {\n          var currColor = colors[i];\n          //colorButtons[currColor].style.border = currColor == color ? '2px solid #789' : '2px solid #fff';\n        }\n        // Retrieves the current options from the drawing manager and replaces the\n        // stroke or fill color as appropriate.\n        var polylineOptions = drawingManager.get('polylineOptions');\n        polylineOptions.strokeColor = color;\n        drawingManager.set('polylineOptions', polylineOptions);\n        var rectangleOptions = drawingManager.get('rectangleOptions');\n        rectangleOptions.fillColor = color;\n        drawingManager.set('rectangleOptions', rectangleOptions);\n        var circleOptions = drawingManager.get('circleOptions');\n        circleOptions.fillColor = color;\n        drawingManager.set('circleOptions', circleOptions);\n        var polygonOptions = drawingManager.get('polygonOptions');\n        polygonOptions.fillColor = color;\n        drawingManager.set('polygonOptions', polygonOptions);\n      };\n      var setSelectedShapeColor = function setSelectedShapeColor(color) {\n        if (selectedShape) {\n          if (selectedShape.type == google.maps.drawing.OverlayType.POLYLINE) {\n            selectedShape.set('strokeColor', color);\n          } else {\n            selectedShape.set('fillColor', color);\n          }\n        }\n      };\n      var update_polygon = function update_polygon(polygon, i) {\n        console.log('called');\n        return function (event) {\n          polygon.getPath().setAt(i, event.latLng);\n        };\n      };\n      var makeColorButton = function makeColorButton(color) {\n        var button = document.createElement('span');\n        button.className = 'color-button';\n        button.style.backgroundColor = color;\n        google.maps.event.addDomListener(button, 'click', function () {\n          selectColor(color);\n          setSelectedShapeColor(color);\n        });\n        return button;\n      };\n      var buildColorPalette = function buildColorPalette() {\n        var colorPalette = document.getElementById('color-palette');\n        for (var i = 0; i < colors.length; ++i) {\n          var currColor = colors[i];\n          var colorButton = makeColorButton(currColor);\n          colorPalette.appendChild(colorButton);\n          colorButtons[currColor] = colorButton;\n        }\n        selectColor(colors[0]);\n      };\n      var map; //= new google.maps.Map(document.getElementById('map'), {\n      // these must have global refs too!:\n      var placeMarkers = [];\n      var input;\n      var searchBox;\n      var curposdiv;\n      var curseldiv;\n      var deletePlacesSearchResults = function deletePlacesSearchResults() {\n        for (var i = 0, marker; marker = placeMarkers[i]; i++) {\n          marker.setMap(null);\n        }\n        placeMarkers = [];\n        input.value = '';\n      };\n      window.$$('#business-detail-modal').on('shown.bs.modal', function () {\n        initialize();\n      });\n      var initialize = function initialize() {\n        map = new google.maps.Map(document.getElementById('map'), {\n          zoom: 16,\n          center: new google.maps.LatLng(reqlat, reqlng),\n          mapTypeId: google.maps.MapTypeId.ROADMAP,\n          disableDefaultUI: false,\n          zoomControl: true\n        });\n        console.log('map', map);\n        curposdiv = document.getElementById('curpos');\n        curseldiv = document.getElementById('cursel');\n        var polyOptions = {\n          strokeWeight: 0,\n          fillOpacity: 0.45,\n          editable: true,\n          draggable: true\n        };\n        // Creates a drawing manager attached to the map that allows the user to draw\n        // markers, lines, and shapes.\n        drawingManager = new google.maps.drawing.DrawingManager({\n          drawingMode: google.maps.drawing.OverlayType.POLYGON,\n          markerOptions: {\n            draggable: true,\n            editable: true\n          },\n          polylineOptions: {\n            editable: true\n          },\n          drawingControl: true,\n          drawingControlOptions: {\n            position: google.maps.ControlPosition.TOP_CENTER,\n            drawingModes: ['polygon']\n          },\n          rectangleOptions: polyOptions,\n          circleOptions: polyOptions,\n          polygonOptions: polyOptions,\n          map: map\n        });\n        google.maps.event.addListener(drawingManager, 'overlaycomplete', function (e) {\n          var isNotMarker = e.type != google.maps.drawing.OverlayType.MARKER;\n          drawingManager.setDrawingMode(null);\n          var newShape = e.overlay;\n          newShape.type = e.type;\n          google.maps.event.addListener(newShape, 'click', function () {\n            setSelection(newShape, true);\n          });\n          google.maps.event.addListener(newShape, 'drag', function () {\n            setSelection(newShape, true);\n          });\n          google.maps.event.addListener(newShape, 'dragend', function () {\n            setSelection(newShape, true);\n          });\n          newShape.getPaths().forEach(function (path, index) {\n            google.maps.event.addListener(path, 'insert_at', function () {\n              setSelection(newShape, true);\n            });\n            google.maps.event.addListener(path, 'remove_at', function () {\n              setSelection(newShape, true);\n            });\n            google.maps.event.addListener(path, 'set_at', function () {\n              setSelection(newShape, true);\n            });\n          });\n          setSelection(newShape, true);\n          setTimeout(function () {\n            if (!newShape.editable) {\n              patharray = [];\n              _this3.props.change('regionCoordinates', []);\n            }\n          }, 1);\n        });\n        for (var i = 0; i < coords.length - 1; i++) {\n          var point = new google.maps.LatLng(coords[i][0], coords[i][1]);\n          polygonCoords.push(point);\n        }\n        var polygon = new google.maps.Polygon({\n          paths: polygonCoords,\n          strokeColor: '#FF0000',\n          strokeOpacity: 0.8,\n          strokeWeight: 3,\n          fillColor: '#FF0000',\n          fillOpacity: 0.35,\n          editable: true,\n          draggable: true\n        });\n        var icon = {\n          path: google.maps.SymbolPath.CIRCLE\n        };\n        var marker_options = {\n          map: map,\n          icon: icon,\n          flat: true,\n          draggable: true,\n          raiseOnDrag: false\n        };\n        polygon.setMap(map);\n        google.maps.event.addListener(polygon, 'drag', function () {\n          setSelection(polygon, true);\n        });\n        google.maps.event.addListener(polygon, 'click', function () {\n          setSelection(polygon, true);\n        });\n        polygon.getPaths().forEach(function (path, index) {\n          google.maps.event.addListener(path, 'insert_at', function () {\n            setSelection(polygon, true);\n          });\n          google.maps.event.addListener(path, 'remove_at', function () {\n            setSelection(polygon, true);\n          });\n          google.maps.event.addListener(path, 'set_at', function () {\n            setSelection(polygon, true);\n          });\n        });\n\n        // Clear the current selection when the drawing mode is changed, or when the\n        // map is clicked.\n        google.maps.event.addListener(drawingManager, 'drawingmode_changed', clearSelection);\n        google.maps.event.addListener(map, 'click', clearSelection);\n        google.maps.event.addDomListener(document.getElementById('delete-button'), 'click', deleteSelectedShape);\n        //buildColorPalette();\n\n        // Create the search box and link it to the UI element.\n        input = /** @type {HTMLInputElement} */ //var\n        document.getElementById('pac-input');\n        //map.controls[google.maps.ControlPosition.TOP_RIGHT].push(input);\n        //\n        var DelPlcButDiv = document.createElement('div');\n        DelPlcButDiv.style.backgroundColor = '#fff';\n        DelPlcButDiv.style.cursor = 'pointer';\n        DelPlcButDiv.innerHTML = 'DEL';\n        map.controls[google.maps.ControlPosition.TOP_RIGHT].push(DelPlcButDiv);\n        google.maps.event.addDomListener(DelPlcButDiv, 'click', deletePlacesSearchResults);\n        searchBox = new google.maps.places.SearchBox(\n        //var\n        /** @type {HTMLInputElement} */\n        input);\n        // Listen for the event fired when the user selects an item from the\n        // pick list. Retrieve the matching places for that item.\n        google.maps.event.addListener(searchBox, 'places_changed', function () {\n          var places = searchBox.getPlaces();\n          if (places.length == 0) {\n            return;\n          }\n          for (var i = 0, marker; marker = placeMarkers[i]; i++) {\n            marker.setMap(null);\n          }\n          // For each place, get the icon, place name, and location.\n          placeMarkers = [];\n          var bounds = new google.maps.LatLngBounds();\n          for (var i = 0, place; place = places[i]; i++) {\n            var image = {\n              url: place.icon,\n              size: new google.maps.Size(71, 71),\n              origin: new google.maps.Point(0, 0),\n              anchor: new google.maps.Point(17, 34),\n              scaledSize: new google.maps.Size(25, 25)\n            };\n            // Create a marker for each place.\n            var marker = new google.maps.Marker({\n              map: map,\n              icon: image,\n              title: place.name,\n              position: place.geometry.location\n            });\n            placeMarkers.push(marker);\n            bounds.extend(place.geometry.location);\n          }\n          map.fitBounds(bounds);\n        });\n        // Bias the SearchBox results towards places that are within the bounds of the\n        // current map's viewport.\n        google.maps.event.addListener(map, 'bounds_changed', function () {\n          var bounds = map.getBounds();\n          searchBox.setBounds(bounds);\n          //curposdiv.innerHTML = \"<b>curpos</b> Z: \" + map.getZoom() + \" C: \" + map.getCenter().toUrlValue();\n        });\n      };\n      google.maps.event.addDomListener(window, 'load', initialize);\n    }\n  }, {\n    key: \"submitMenuForm\",\n    value: function submitMenuForm(values) {\n      var _this4 = this;\n      var itemIndex = this.state.itemIndex;\n      return addDriverGeofencing(values).then(function (result) {\n        _this4.props.updateDriverGeofencingSuccess(result.data.data, itemIndex);\n        toast.success('Delivery Region updated Successfully.');\n        _this4.props.reset();\n        _this4.props.updateRegionSlide(result.data.data);\n      }).catch(function (error) {\n        //throw new SubmissionError(error.response.data.error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        handleSubmit = _this$props.handleSubmit,\n        pristine = _this$props.pristine,\n        submitting = _this$props.submitting;\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.submitMenuForm.bind(this)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        name: \"name\",\n        component: renderField,\n        type: \"text\",\n        className: \"form-control\",\n        label: \"Name\",\n        placeholder: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        name: \"region_shop_radius\",\n        component: renderField,\n        type: \"number\",\n        className: \"form-control\",\n        label: \"Radius\",\n        placeholder: \"eg. 5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"color-palette\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"javascript:void(0)\",\n        id: \"delete-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 19\n        }\n      }, \"Delete Selected Shape\")), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"curpos\",\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"cursel\",\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"pac-input\",\n        type: \"text\",\n        placeholder: \"Search Box\",\n        defaultValue: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"map\",\n        style: {\n          width: '700px',\n          height: '300px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 15\n        }\n      }, \"A\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row save-button-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 align-self-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: submitting,\n        className: \"btn green-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 13\n        }\n      }, \"Submit details\", submitting && /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 112\n        }\n      })))));\n    }\n  }]);\n  return EditDeliveryRegion;\n}(Component);\nEditDeliveryRegion = reduxForm({\n  form: 'EditDeliveryRegionValue',\n  destroyOnUnmount: true,\n  enableReinitialize: true,\n  keepDirtyOnReinitialize: true,\n  validate: validate\n})(EditDeliveryRegion);\nvar mapStatesToProps = function mapStatesToProps(state, ownProps) {\n  var initialValues = ownProps.regionDetail;\n  var id = ownProps.regionDetail ? ownProps.regionDetail.id : null;\n  return {\n    initialValues: initialValues,\n    id: id\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateDriverGeofencingSuccess: function updateDriverGeofencingSuccess(payload, index) {\n      dispatch(_updateDriverGeofencingSuccess(payload, index));\n    }\n  };\n};\nexport default connect(mapStatesToProps, mapDispatchToProps)(EditDeliveryRegion);","map":{"version":3,"names":["React","Component","Suspense","toast","connect","reduxForm","Field","SubmissionError","reset","FieldArray","formValueSelector","renderFieldLabelTransition","renderField","validate","addDriverGeofencing","updateDriverGeofencingSuccess","EditDeliveryRegion","_Component","_inherits","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","state","regionDetail","geofence","itemIndex","bindSlider","bind","_assertThisInitialized","_createClass","key","value","componentDidMount","_this2","window","addEventListener","document","readyState","_this3","drawingManager","selectedShape","colors","selectedColor","colorButtons","posstr","pathstr","bndstr","cntstr","cntrstr","radstr","firstpathstr","google","reqlat","latitude","reqlng","longitude","patharray","coords","regionCoordinates","polygonCoords","clearSelection","setEditable","curseldiv","innerHTML","updateCurSelText","shape","position","toUrlValue","getPath","i","getLength","push","getAt","split","getBounds","tmpbounds","getCenter","getNorthEast","getSouthWest","getRadius","change","type","setSelection","isNotMarker","selectColor","get","deleteSelectedShape","setMap","color","length","currColor","polylineOptions","strokeColor","set","rectangleOptions","fillColor","circleOptions","polygonOptions","setSelectedShapeColor","maps","drawing","OverlayType","POLYLINE","update_polygon","polygon","console","log","event","setAt","latLng","makeColorButton","button","createElement","className","style","backgroundColor","addDomListener","buildColorPalette","colorPalette","getElementById","colorButton","appendChild","map","placeMarkers","input","searchBox","curposdiv","deletePlacesSearchResults","marker","$$","on","initialize","Map","zoom","center","LatLng","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","zoomControl","polyOptions","strokeWeight","fillOpacity","editable","draggable","DrawingManager","drawingMode","POLYGON","markerOptions","drawingControl","drawingControlOptions","ControlPosition","TOP_CENTER","drawingModes","addListener","e","MARKER","setDrawingMode","newShape","overlay","getPaths","forEach","path","index","setTimeout","point","Polygon","paths","strokeOpacity","icon","SymbolPath","CIRCLE","marker_options","flat","raiseOnDrag","DelPlcButDiv","cursor","controls","TOP_RIGHT","places","SearchBox","getPlaces","bounds","LatLngBounds","place","image","url","size","Size","origin","Point","anchor","scaledSize","Marker","title","name","geometry","location","extend","fitBounds","setBounds","submitMenuForm","values","_this4","then","result","data","success","updateRegionSlide","catch","error","render","_this$props","handleSubmit","pristine","submitting","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","component","label","placeholder","id","href","display","defaultValue","width","height","disabled","form","destroyOnUnmount","enableReinitialize","keepDirtyOnReinitialize","mapStatesToProps","ownProps","initialValues","mapDispatchToProps","dispatch","payload"],"sources":["/home/hardik/gatoes-admin-ui/src/components/regions/EditDeliveryRegion.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field, SubmissionError, reset, FieldArray, formValueSelector } from 'redux-form';\nimport renderFieldLabelTransition from '../FormFields/renderFieldLabelTransition';\nimport renderField from '../FormFields/renderField';\nimport validate from './ValidateDeliveryRegion';\nimport { addDriverGeofencing, updateDriverGeofencingSuccess } from '../../actions/regions';\n\nclass EditDeliveryRegion extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      regionDetail: props.regionDetail,\n      geofence : [],\n      itemIndex: props.itemIndex\n    }\n    this.bindSlider = this.bindSlider.bind(this);\n  }\n\n  componentDidMount(){\n    window.addEventListener('load', () => {\n      this.bindSlider();\n    });\n\n    if(document.readyState === \"complete\" || document.readyState === \"interactive\"){\n      this.bindSlider();\n    }\n  }\n\n  bindSlider(){\n    var drawingManager;\n    var selectedShape;\n    var colors = ['#1E90FF', '#FF1493', '#32CD32', '#FF8C00', '#4B0082'];\n    var selectedColor;\n    var colorButtons = {};\n    var posstr;\n    var pathstr, bndstr, cntstr, cntrstr, radstr, firstpathstr;\n    let google = window.google;\n    let reqlat = this.state.regionDetail.latitude ? this.state.regionDetail.latitude : 30.7333;\n    let reqlng = this.state.regionDetail.longitude ? this.state.regionDetail.longitude : 76.7794;\n    let patharray = [];\n    let coords = this.state.regionDetail.regionCoordinates;\n    let polygonCoords = [];\n\n    const clearSelection = () => {\n      if (selectedShape) {\n        if (typeof selectedShape.setEditable == 'function') {\n          selectedShape.setEditable(false);\n        }\n        selectedShape = null;\n      }\n      curseldiv.innerHTML = \"<b>cursel</b>:\";\n    }\n    const updateCurSelText = (shape) => {\n      patharray = [];\n      posstr = \"\" + selectedShape.position;\n      if (typeof selectedShape.position == 'object') {\n        posstr = selectedShape.position.toUrlValue();\n      }\n      pathstr = \"\" + selectedShape.getPath;\n      if (typeof selectedShape.getPath == 'function') {\n        for (var i = 0; i < selectedShape.getPath().getLength(); i++) {\n          patharray.push(selectedShape.getPath().getAt(i).toUrlValue().split(','))\n        }\n          patharray.push(selectedShape.getPath().getAt(0).toUrlValue().split(','))\n\n        // pathstr = \"[ \";\n        // for (var i = 0; i < selectedShape.getPath().getLength(); i++) {\n        //   // .toUrlValue(5) limits number of decimals, default is 6 but can do more\n        //   if(i == 0){\n        //     firstpathstr = selectedShape.getPath().getAt(i).toUrlValue();\n        //   }\n        //   pathstr += selectedShape.getPath().getAt(i).toUrlValue() + \" , \";\n        // }\n        // pathstr += firstpathstr;\n        // pathstr += \"]\";\n      }\n      bndstr = \"\" + selectedShape.getBounds;\n      cntstr = \"\" + selectedShape.getBounds;\n      if (typeof selectedShape.getBounds == 'function') {\n        var tmpbounds = selectedShape.getBounds();\n        cntstr = \"\" + tmpbounds.getCenter().toUrlValue();\n        bndstr = \"[NE: \" + tmpbounds.getNorthEast().toUrlValue() + \" SW: \" + tmpbounds.getSouthWest().toUrlValue() + \"]\";\n      }\n      cntrstr = \"\" + selectedShape.getCenter;\n      if (typeof selectedShape.getCenter == 'function') {\n        cntrstr = \"\" + selectedShape.getCenter().toUrlValue();\n      }\n      radstr = \"\" + selectedShape.getRadius;\n      if (typeof selectedShape.getRadius == 'function') {\n        radstr = \"\" + selectedShape.getRadius();\n      }\n\n      // pathstr = pathstr.split(pathstr,' , ');\n      this.props.change('regionCoordinates', patharray);\n\n      curseldiv.innerHTML = \"<b>cursel</b>: \" + selectedShape.type + \" \" + selectedShape + \"; <i>pos</i>: \" + posstr + \" ; <i>path</i>: \" + pathstr + \" ; <i>bounds</i>: \" + bndstr + \" ; <i>Cb</i>: \" + cntstr + \" ; <i>radius</i>: \" + radstr + \" ; <i>Cr</i>: \" + cntrstr ;\n    }\n    const setSelection = (shape, isNotMarker) => {\n      clearSelection();\n      selectedShape = shape;\n      if (isNotMarker)\n        shape.setEditable(true);\n      selectColor(shape.get('fillColor') || shape.get('strokeColor'));\n      updateCurSelText(shape);\n    }\n    const deleteSelectedShape = () => {\n      if (selectedShape) {\n        selectedShape.setMap(null);\n        patharray = [];\n        this.props.change('regionCoordinates', []);\n      }\n    }\n    const selectColor = (color) => {\n      selectedColor = color;\n      for (var i = 0; i < colors.length; ++i) {\n        var currColor = colors[i];\n        //colorButtons[currColor].style.border = currColor == color ? '2px solid #789' : '2px solid #fff';\n      }\n      // Retrieves the current options from the drawing manager and replaces the\n      // stroke or fill color as appropriate.\n      var polylineOptions = drawingManager.get('polylineOptions');\n      polylineOptions.strokeColor = color;\n      drawingManager.set('polylineOptions', polylineOptions);\n      var rectangleOptions = drawingManager.get('rectangleOptions');\n      rectangleOptions.fillColor = color;\n      drawingManager.set('rectangleOptions', rectangleOptions);\n      var circleOptions = drawingManager.get('circleOptions');\n      circleOptions.fillColor = color;\n      drawingManager.set('circleOptions', circleOptions);\n      var polygonOptions = drawingManager.get('polygonOptions');\n      polygonOptions.fillColor = color;\n      drawingManager.set('polygonOptions', polygonOptions);\n    }\n    const setSelectedShapeColor = (color) => {\n      if (selectedShape) {\n        if (selectedShape.type == google.maps.drawing.OverlayType.POLYLINE) {\n          selectedShape.set('strokeColor', color);\n        } else {\n          selectedShape.set('fillColor', color);\n        }\n      }\n    }\n\n    const update_polygon = (polygon, i) =>{\n        console.log('called');\n        return function(event){\n           polygon.getPath().setAt(i, event.latLng); \n        }\n    }\n    const makeColorButton = (color) => {\n      var button = document.createElement('span');\n      button.className = 'color-button';\n      button.style.backgroundColor = color;\n      google.maps.event.addDomListener(button, 'click', function() {\n        selectColor(color);\n        setSelectedShapeColor(color);\n      });\n      return button;\n    }\n    const buildColorPalette = () => {\n       var colorPalette = document.getElementById('color-palette');\n       for (var i = 0; i < colors.length; ++i) {\n         var currColor = colors[i];\n         var colorButton = makeColorButton(currColor);\n         colorPalette.appendChild(colorButton);\n         colorButtons[currColor] = colorButton;\n       }\n       selectColor(colors[0]);\n    }\n    \n    var map; //= new google.maps.Map(document.getElementById('map'), {\n    // these must have global refs too!:\n    var placeMarkers = [];\n    var input;\n    var searchBox;\n    var curposdiv;\n    var curseldiv;\n    const deletePlacesSearchResults = () => {\n      for (var i = 0, marker; marker = placeMarkers[i]; i++) {\n        marker.setMap(null);\n      }\n      placeMarkers = [];\n      input.value = ''; \n    }\n\n    window.$$('#business-detail-modal').on('shown.bs.modal', function(){\n      initialize();\n    });\n    \n    const initialize = () => {\n      map = new google.maps.Map(document.getElementById('map'), { \n        zoom: 16,\n        center: new google.maps.LatLng(reqlat,reqlng),\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\n        disableDefaultUI: false,\n        zoomControl: true\n      });\n\n      console.log('map', map);\n\n      curposdiv = document.getElementById('curpos');\n      curseldiv = document.getElementById('cursel');\n      var polyOptions = {\n        strokeWeight: 0,\n        fillOpacity: 0.45,\n        editable: true,\n        draggable: true\n      };\n      // Creates a drawing manager attached to the map that allows the user to draw\n      // markers, lines, and shapes.\n      drawingManager = new google.maps.drawing.DrawingManager({\n        drawingMode: google.maps.drawing.OverlayType.POLYGON,\n        markerOptions: {\n          draggable: true,\n          editable: true,\n        },\n        polylineOptions: {\n          editable: true\n        },\n        drawingControl: true,\n        drawingControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: ['polygon']\n        },\n        rectangleOptions: polyOptions,\n        circleOptions: polyOptions,\n        polygonOptions: polyOptions,\n        map: map\n      });\n      \n      \n      \n\n      google.maps.event.addListener(drawingManager, 'overlaycomplete', (e) => {\n          var isNotMarker = (e.type != google.maps.drawing.OverlayType.MARKER);\n          drawingManager.setDrawingMode(null);\n          var newShape = e.overlay;\n          newShape.type = e.type;\n\n          google.maps.event.addListener(newShape, 'click', function() {\n            setSelection(newShape, true);\n          });\n          google.maps.event.addListener(newShape, 'drag', function() {\n            setSelection(newShape, true);\n          });\n          google.maps.event.addListener(newShape, 'dragend', function() {\n            setSelection(newShape, true);\n          });\n          newShape.getPaths().forEach(function(path, index){\n            google.maps.event.addListener(path,'insert_at', function(){\n              setSelection(newShape,true);\n            });\n            google.maps.event.addListener(path, 'remove_at', function(){\n              setSelection(newShape,true);\n            });\n            google.maps.event.addListener(path, 'set_at', function(){\n              setSelection(newShape,true);\n            });\n\n          });\n          setSelection(newShape, true);\n          setTimeout(() => {\n            if(!newShape.editable){\n              patharray = [];\n              this.props.change('regionCoordinates', []);\n            }\n          }, 1);\n      });\n      for (let i = 0; i < coords.length-1; i++) {\n        var point = new google.maps.LatLng(coords[i][0], coords[i][1]);\n        polygonCoords.push(point);\n      }\n\n      let polygon = new google.maps.Polygon({\n        paths: polygonCoords,\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 3,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        editable:true,\n        draggable:true\n      });\n       var icon = {\n        path: google.maps.SymbolPath.CIRCLE,\n        \n        };\n       var marker_options = {\n        map: map,\n        icon: icon,\n        flat: true,\n        draggable: true,\n        raiseOnDrag: false\n        };\n\n      polygon.setMap(map);\n\n      google.maps.event.addListener(polygon,'drag', function() {\n            setSelection(polygon,true);\n      });\n      google.maps.event.addListener(polygon, 'click', function() {\n            setSelection(polygon,true);\n      });\n      polygon.getPaths().forEach(function(path, index){\n        google.maps.event.addListener(path,'insert_at', function(){\n          setSelection(polygon,true);\n        });\n        google.maps.event.addListener(path, 'remove_at', function(){\n          setSelection(polygon,true);\n        });\n        google.maps.event.addListener(path, 'set_at', function(){\n          setSelection(polygon,true);\n        });\n      });\n       \n      // Clear the current selection when the drawing mode is changed, or when the\n      // map is clicked.\n      google.maps.event.addListener(drawingManager, 'drawingmode_changed', clearSelection);\n      google.maps.event.addListener(map, 'click', clearSelection);\n      google.maps.event.addDomListener(document.getElementById('delete-button'), 'click', deleteSelectedShape);\n      //buildColorPalette();\n      \n      // Create the search box and link it to the UI element.\n       input = /** @type {HTMLInputElement} */( //var\n          document.getElementById('pac-input'));\n      //map.controls[google.maps.ControlPosition.TOP_RIGHT].push(input);\n      //\n      var DelPlcButDiv = document.createElement('div');\n      DelPlcButDiv.style.backgroundColor = '#fff';\n      DelPlcButDiv.style.cursor = 'pointer';\n      DelPlcButDiv.innerHTML = 'DEL';\n      map.controls[google.maps.ControlPosition.TOP_RIGHT].push(DelPlcButDiv);\n      google.maps.event.addDomListener(DelPlcButDiv, 'click', deletePlacesSearchResults);\n      searchBox = new google.maps.places.SearchBox( //var\n        /** @type {HTMLInputElement} */(input));\n      // Listen for the event fired when the user selects an item from the\n      // pick list. Retrieve the matching places for that item.\n      google.maps.event.addListener(searchBox, 'places_changed', function() {\n        var places = searchBox.getPlaces();\n        if (places.length == 0) {\n          return;\n        }\n        for (var i = 0, marker; marker = placeMarkers[i]; i++) {\n          marker.setMap(null);\n        }\n        // For each place, get the icon, place name, and location.\n        placeMarkers = [];\n        var bounds = new google.maps.LatLngBounds();\n        for (var i = 0, place; place = places[i]; i++) {\n          var image = {\n            url: place.icon,\n            size: new google.maps.Size(71, 71),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(17, 34),\n            scaledSize: new google.maps.Size(25, 25)\n          };\n          // Create a marker for each place.\n          var marker = new google.maps.Marker({\n            map: map,\n            icon: image,\n            title: place.name,\n            position: place.geometry.location\n          });\n          placeMarkers.push(marker);\n          bounds.extend(place.geometry.location);\n        }\n        map.fitBounds(bounds);\n      });\n      // Bias the SearchBox results towards places that are within the bounds of the\n      // current map's viewport.\n      google.maps.event.addListener(map, 'bounds_changed', function() {\n        var bounds = map.getBounds();\n        searchBox.setBounds(bounds);\n        //curposdiv.innerHTML = \"<b>curpos</b> Z: \" + map.getZoom() + \" C: \" + map.getCenter().toUrlValue();\n      });\n    }\n    google.maps.event.addDomListener(window, 'load', initialize);\n  }\n  \n  submitMenuForm(values){\n    const {itemIndex} = this.state;\n    return addDriverGeofencing(values)\n    .then((result) => {\n      this.props.updateDriverGeofencingSuccess(result.data.data, itemIndex);\n      toast.success('Delivery Region updated Successfully.');\n      this.props.reset();\n      this.props.updateRegionSlide(result.data.data);\n    }).catch(error => {\n      //throw new SubmissionError(error.response.data.error);\n    })\n    \n  }\n\n  render() {\n    const {handleSubmit, pristine, submitting} = this.props;\n    return (\n      <form onSubmit={handleSubmit(this.submitMenuForm.bind(this))}>\n        <div className=\"form-block\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <Field\n                name=\"name\"\n                component={renderField}\n                type=\"text\"\n                className=\"form-control\"\n                label=\"Name\"\n                placeholder=\"\"\n              />\n            </div>\n          \n            <div className=\"col-lg-6\">\n              <Field\n                name=\"region_shop_radius\"\n                component={renderField}\n                type=\"number\"\n                className=\"form-control\"\n                label=\"Radius\"\n                placeholder=\"eg. 5\"\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <div id=\"panel\">\n                <div id=\"color-palette\"></div>\n                <div>\n                  <a href=\"javascript:void(0)\" id=\"delete-button\">Delete Selected Shape</a>\n                </div>\n\n                <div id=\"curpos\" style={{ display: 'none'}}></div>\n                <div id=\"cursel\" style={{ display: 'none'}}></div>\n              \n              </div>\n              <input id=\"pac-input\" type=\"text\" placeholder=\"Search Box\" defaultValue=\"\" />\n              <div id=\"map\" style={{ width: '700px', height: '300px' }}>A</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row save-button-block\">\n          <div className=\"col-sm-12 align-self-center\">\n            <button type=\"submit\" disabled={submitting} className=\"btn green-btn\">Submit details{submitting && <i className=\"fa fa-spinner fa-spin\"></i>}</button>\n            \n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nEditDeliveryRegion = reduxForm({\n  form: 'EditDeliveryRegionValue',\n  destroyOnUnmount: true,\n  enableReinitialize: true,\n  keepDirtyOnReinitialize: true,\n  validate\n})(EditDeliveryRegion)\n\nconst mapStatesToProps = (state, ownProps) => {\n  const initialValues = ownProps.regionDetail;\n  const id = ownProps.regionDetail ? ownProps.regionDetail.id : null;\n\n  return {initialValues, id};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateDriverGeofencingSuccess: (payload, index) => {\n      dispatch(updateDriverGeofencingSuccess(payload, index));\n    },\n  };\n}\n\nexport default connect(mapStatesToProps, mapDispatchToProps)(EditDeliveryRegion);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}