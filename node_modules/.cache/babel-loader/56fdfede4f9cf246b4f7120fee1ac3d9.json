{"ast":null,"code":"var ValidateForm = function ValidateForm(values) {\n  var errors = {};\n  var timingArrayErrors = [];\n  //console.log('aaaa', values);\n  if (!values.subject || values.subject.trim() === '') {\n    errors.subject = 'Enter subject';\n  }\n  if (!values.message || values.message.trim() === '') {\n    errors.message = 'Enter message';\n  } else if (!values.notificationType || values.notificationType < 0) {\n    errors.notificationType = 'Choose notification type';\n  } else if (values.notificationType == 2 && values.message.length > 160) {\n    errors.message = 'For SMS message should be in less than 160 characters';\n  }\n  if (!values.notificationUser || values.notificationUser < 0) {\n    errors.notificationUser = 'Choose notification user';\n  }\n  if (values.upload_csv || values.upload_csv == true) {\n    if (!values.csv_records || values.csv_records.length < 1) {\n      errors.csv = 'Please upload a valid CSV first';\n    }\n  }\n\n  // if (values.zone){\n  //     values.zone.forEach((time, timeIndex) => {\n  //       const timeErrors = {};\n  //       if(!time || !time.zoneId) {\n  //           timeErrors.zoneId = 'Required'\n  //           timingArrayErrors[timeIndex] = timeErrors\n  //       }\n\n  //       if (timingArrayErrors.length) {\n  //           errors.zone = timingArrayErrors\n  //       }\n\n  //     })\n  // }\n\n  return errors;\n};\nexport default ValidateForm;","map":{"version":3,"names":["ValidateForm","values","errors","timingArrayErrors","subject","trim","message","notificationType","length","notificationUser","upload_csv","csv_records","csv"],"sources":["/home/hardik/gatoes-admin-ui/src/components/communication/ValidateForm.js"],"sourcesContent":["const ValidateForm = values => {\n  const errors = {};\n  const timingArrayErrors = []\n  //console.log('aaaa', values);\n  if (!values.subject || values.subject.trim() === '') {\n    errors.subject = 'Enter subject';\n  }\n  if (!values.message || values.message.trim() === '') {\n    errors.message = 'Enter message';\n  } else if (!values.notificationType || values.notificationType < 0) {\n    errors.notificationType = 'Choose notification type';\n  } else if(values.notificationType == 2 && values.message.length > 160){\n    errors.message = 'For SMS message should be in less than 160 characters';\n  }\n\n\n  if (!values.notificationUser || values.notificationUser < 0) {\n    errors.notificationUser = 'Choose notification user';\n  }\n\n  if (values.upload_csv || values.upload_csv == true) {\n    if (!values.csv_records || values.csv_records.length < 1) {\n      errors.csv = 'Please upload a valid CSV first';\n    }\n  }\n\n  // if (values.zone){\n  //     values.zone.forEach((time, timeIndex) => {\n  //       const timeErrors = {};\n  //       if(!time || !time.zoneId) {\n  //           timeErrors.zoneId = 'Required'\n  //           timingArrayErrors[timeIndex] = timeErrors\n  //       }\n\n  //       if (timingArrayErrors.length) {\n  //           errors.zone = timingArrayErrors\n  //       }\n\n  //     })\n  // }\n\n\n\n  return errors;\n}\n\nexport default ValidateForm;"],"mappings":"AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAYA,CAAGC,MAAM,EAAI;EAC7B,IAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,IAAMC,iBAAiB,GAAG,EAAE;EAC5B;EACA,IAAI,CAACF,MAAM,CAACG,OAAO,IAAIH,MAAM,CAACG,OAAO,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACnDH,MAAM,CAACE,OAAO,GAAG,eAAe;EAClC;EACA,IAAI,CAACH,MAAM,CAACK,OAAO,IAAIL,MAAM,CAACK,OAAO,CAACD,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACnDH,MAAM,CAACI,OAAO,GAAG,eAAe;EAClC,CAAC,MAAM,IAAI,CAACL,MAAM,CAACM,gBAAgB,IAAIN,MAAM,CAACM,gBAAgB,GAAG,CAAC,EAAE;IAClEL,MAAM,CAACK,gBAAgB,GAAG,0BAA0B;EACtD,CAAC,MAAM,IAAGN,MAAM,CAACM,gBAAgB,IAAI,CAAC,IAAIN,MAAM,CAACK,OAAO,CAACE,MAAM,GAAG,GAAG,EAAC;IACpEN,MAAM,CAACI,OAAO,GAAG,uDAAuD;EAC1E;EAGA,IAAI,CAACL,MAAM,CAACQ,gBAAgB,IAAIR,MAAM,CAACQ,gBAAgB,GAAG,CAAC,EAAE;IAC3DP,MAAM,CAACO,gBAAgB,GAAG,0BAA0B;EACtD;EAEA,IAAIR,MAAM,CAACS,UAAU,IAAIT,MAAM,CAACS,UAAU,IAAI,IAAI,EAAE;IAClD,IAAI,CAACT,MAAM,CAACU,WAAW,IAAIV,MAAM,CAACU,WAAW,CAACH,MAAM,GAAG,CAAC,EAAE;MACxDN,MAAM,CAACU,GAAG,GAAG,iCAAiC;IAChD;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAIA,OAAOV,MAAM;AACf,CAAC;AAED,eAAeF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}