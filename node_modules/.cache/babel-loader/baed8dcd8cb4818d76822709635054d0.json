{"ast":null,"code":"// import React from \"react\";\n// import DatePicker from \"react-datepicker\";\n\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n// import moment from 'moment';\n\n// const renderDatePicker = ({ input, dateFormat, maxDate,  showYearDropdown, id, date, showTimeSelect, showTimeSelectOnly, innerParentDivClass, className,  labelClass, readOnly, notes, min, defaultValue, parentDivClass, fieldClass, label, type, placeholder,placeholderText,minDate, meta: { touched, error, invalid, warning } }) => {\n//    var selectedDate = null;\n//    if(input.value){\n//      var selectedDate = input.value;\n//      if(typeof selectedDate == 'string'){\n//        var selectedDate = new Date(selectedDate);\n//      }\n\n//    }\n\n//    //console.log('lllllll=', input.value);\n\n//    return(\n//      <div className={ `${\"form-group\"} ${parentDivClass ? parentDivClass : ' '} ${touched && error ? ' has-error ':''}`} >\n//        {(type != \"hidden\") && (<label className={labelClass?labelClass:\"\"}>{label}</label>)}\n//        <div className={innerParentDivClass?innerParentDivClass:\"col-sm-10 col-lg-10\"}>\n\n//            <DatePicker\n//              maxDate={maxDate?maxDate:null}\n//              showYearDropdown={showYearDropdown?true:false}\n//              showTimeSelect={showTimeSelect?true:false}\n//              showTimeSelectOnly={showTimeSelectOnly?true:false}\n//              name={input.name}\n//              minDate={minDate?minDate:null}\n//              placeholderText={placeholderText}\n//              selected={selectedDate}\n//              onChange={(newValue) => {\n//                //console.log('lllllllllchange', newValue);\n//                input.onChange(newValue)\n//              }}\n//              onBlur={(newValue) => {\n//                //console.log('lllllllllblur', newValue);\n//                //input.onBlur(newValue)\n//              }}\n//              dateFormat={dateFormat?dateFormat:'YYYY-MM-dd'}\n//              className={className?className:'form-control'}\n//              calendarClassName={\"custom-calendar-container\"}\n//            />\n\n//          {touched && ((error && <span className=\"error\">{error}</span>) || (warning && <span className=\"error\">{warning}</span>))}\n//          {\n//           notes && (<div cl  assName=\"help-notes\"><small>{notes}</small></div>)\n//          }\n//        </div>\n\n//      </div>\n//    )\n//  }\n\n// export default renderDatePicker;","map":{"version":3,"names":[],"sources":["/home/hardik/gatoes-admin-ui/src/components/FormFields/renderDatePicker.jsx"],"sourcesContent":["// import React from \"react\";\n// import DatePicker from \"react-datepicker\";\n\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n// import moment from 'moment';\n\n// const renderDatePicker = ({ input, dateFormat, maxDate,  showYearDropdown, id, date, showTimeSelect, showTimeSelectOnly, innerParentDivClass, className,  labelClass, readOnly, notes, min, defaultValue, parentDivClass, fieldClass, label, type, placeholder,placeholderText,minDate, meta: { touched, error, invalid, warning } }) => {\n//    var selectedDate = null;\n//    if(input.value){\n//      var selectedDate = input.value;\n//      if(typeof selectedDate == 'string'){\n//        var selectedDate = new Date(selectedDate);\n//      }\n\n//    }\n\n//    //console.log('lllllll=', input.value);\n\n//    return(\n//      <div className={ `${\"form-group\"} ${parentDivClass ? parentDivClass : ' '} ${touched && error ? ' has-error ':''}`} >\n//        {(type != \"hidden\") && (<label className={labelClass?labelClass:\"\"}>{label}</label>)}\n//        <div className={innerParentDivClass?innerParentDivClass:\"col-sm-10 col-lg-10\"}>\n\n//            <DatePicker\n//              maxDate={maxDate?maxDate:null}\n//              showYearDropdown={showYearDropdown?true:false}\n//              showTimeSelect={showTimeSelect?true:false}\n//              showTimeSelectOnly={showTimeSelectOnly?true:false}\n//              name={input.name}\n//              minDate={minDate?minDate:null}\n//              placeholderText={placeholderText}\n//              selected={selectedDate}\n//              onChange={(newValue) => {\n//                //console.log('lllllllllchange', newValue);\n//                input.onChange(newValue)\n//              }}\n//              onBlur={(newValue) => {\n//                //console.log('lllllllllblur', newValue);\n//                //input.onBlur(newValue)\n//              }}\n//              dateFormat={dateFormat?dateFormat:'YYYY-MM-dd'}\n//              className={className?className:'form-control'}\n//              calendarClassName={\"custom-calendar-container\"}\n//            />\n\n//          {touched && ((error && <span className=\"error\">{error}</span>) || (warning && <span className=\"error\">{warning}</span>))}\n//          {\n//           notes && (<div cl  assName=\"help-notes\"><small>{notes}</small></div>)\n//          }\n//        </div>\n\n//      </div>\n//    )\n//  }\n\n// export default renderDatePicker;"],"mappings":"AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}