{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar MemoryStorage = function () {\n  function MemoryStorage() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      logger = _ref.logger,\n      _ref$initialState = _ref.initialState,\n      initialState = _ref$initialState === void 0 ? {} : _ref$initialState;\n    _classCallCheck(this, MemoryStorage);\n    this.storage = Object.assign({}, initialState);\n    this.logger = logger;\n  }\n  _createClass(MemoryStorage, [{\n    key: \"log\",\n    value: function log() {\n      if (this.logger && typeof this.logger === 'function') {\n        this.logger.apply(this, arguments);\n      }\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(key, value, callback) {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        _this.storage[key] = value;\n        _this.log('setItem called with', key, value);\n        if (callback) callback(null, value);\n        resolve(value);\n      });\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(key, callback) {\n      var _this2 = this;\n      return new Promise(function (resolve, reject) {\n        _this2.log('getItem called with', key);\n        var value = _this2.storage[key];\n        if (callback) callback(null, value);\n        resolve(value);\n      });\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(key, callback) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        _this3.log('removeItem called with', key);\n        var value = _this3.storage[key];\n        delete _this3.storage[key];\n        if (callback) callback(null, value);\n        resolve(value);\n      });\n    }\n  }, {\n    key: \"getAllKeys\",\n    value: function getAllKeys(callback) {\n      var _this4 = this;\n      return new Promise(function (resolve, reject) {\n        _this4.log('getAllKeys called');\n        var keys = Object.keys(_this4.storage);\n        if (callback) callback(null, keys);\n        resolve(keys);\n      });\n    }\n  }]);\n  return MemoryStorage;\n}();\nexport { MemoryStorage as default };","map":null,"metadata":{},"sourceType":"module"}