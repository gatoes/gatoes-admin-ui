{"ast":null,"code":"import axios from 'axios';\nimport { API_ROOT, _dispatch } from '../constants';\nexport { _dispatch };\nexport var PROMOTION_LISTING_SUCCESS = 'PROMOTION_LISTING_SUCCESS';\nexport var DELETE_PROMOTION_SUCCESS = 'DELETE_PROMOTION_SUCCESS';\nexport var PROMOTION_CATEGORY_LISTING_SUCCESS = 'PROMOTION_CATEGORY_LISTING_SUCCESS';\nvar ROOT_URL = API_ROOT;\nexport function categoryTypeListing(params) {\n  return axios({\n    method: 'GET',\n    params: params,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/getPromotionCategoryUsingMicroservice\")\n  });\n}\nexport function createPromotionUsingMicroservice(data) {\n  return axios({\n    method: 'POST',\n    data: data,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/createPromotionUsingMicroservice\")\n  });\n}\nexport function promotionListingUsingMicroservice(params) {\n  return axios({\n    method: 'GET',\n    params: params,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/promotionListingUsingMicroservice\")\n  });\n}\nexport function promotionListingSuccess(payload) {\n  return {\n    type: PROMOTION_LISTING_SUCCESS,\n    payload: payload\n  };\n}\nexport function deletePromotionSuccess(payload) {\n  return {\n    type: DELETE_PROMOTION_SUCCESS,\n    payload: payload\n  };\n}\nexport function deletePromotionUsingMicroservice(data) {\n  console.log(data, \"dataPayload\");\n  return axios({\n    method: 'DELETE',\n    data: data,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/deletePromotionUsingMicroservice\")\n  });\n}\nexport function promotionByIdUsingMicroservice(params) {\n  return axios({\n    method: 'GET',\n    params: params,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/promotionByIdUsingMicroservice\")\n  });\n}\nexport function updatePromotionUsingMicroservice(data) {\n  return axios({\n    method: 'POST',\n    data: data,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/updatePromotionUsingMicroservice\")\n  });\n}\nexport function createPromotionCategoryUsingMicroservice(data) {\n  return axios({\n    method: 'POST',\n    data: data,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/createPromotionCategoryUsingMicroservice\")\n  });\n}\nexport function updatePromotionCategoryUsingMicroservice(data) {\n  return axios({\n    method: 'POST',\n    data: data,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/updatePromotionCategoryUsingMicroservice\")\n  });\n}\nexport function getPromotionCategoryUsingMicroservice(params) {\n  return axios({\n    method: 'GET',\n    params: params,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/getPromotionCategoryUsingMicroservice\")\n  });\n}\nexport function promotionCatListingSuccess(payload) {\n  return {\n    type: PROMOTION_CATEGORY_LISTING_SUCCESS,\n    payload: payload\n  };\n}\nexport function getPromotionCategoryByIdUsingMicroservice(params) {\n  return axios({\n    method: 'GET',\n    params: params,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/getPromotionCategoryByIdUsingMicroservice\")\n  });\n}\nexport function enrollPromotionThroughAdminUsingMicroservice(data) {\n  return axios({\n    method: \"POST\",\n    data: data,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/enrollPromotionThroughAdminUsingMicroservice\")\n  });\n}\nexport function promotionReporting(params) {\n  return axios({\n    method: 'GET',\n    params: params,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/promotionReportingUsingMicroservice\")\n  });\n}","map":{"version":3,"names":["axios","API_ROOT","_dispatch","PROMOTION_LISTING_SUCCESS","DELETE_PROMOTION_SUCCESS","PROMOTION_CATEGORY_LISTING_SUCCESS","ROOT_URL","categoryTypeListing","params","method","url","concat","createPromotionUsingMicroservice","data","promotionListingUsingMicroservice","promotionListingSuccess","payload","type","deletePromotionSuccess","deletePromotionUsingMicroservice","console","log","promotionByIdUsingMicroservice","updatePromotionUsingMicroservice","createPromotionCategoryUsingMicroservice","updatePromotionCategoryUsingMicroservice","getPromotionCategoryUsingMicroservice","promotionCatListingSuccess","getPromotionCategoryByIdUsingMicroservice","enrollPromotionThroughAdminUsingMicroservice","promotionReporting"],"sources":["/home/hardik/gatoes-admin-ui/src/actions/newpromotion.js"],"sourcesContent":["import axios from 'axios';\nimport { API_ROOT, _dispatch } from '../constants';\nexport {_dispatch};\nexport const PROMOTION_LISTING_SUCCESS = 'PROMOTION_LISTING_SUCCESS';\nexport const DELETE_PROMOTION_SUCCESS = 'DELETE_PROMOTION_SUCCESS'\nexport const PROMOTION_CATEGORY_LISTING_SUCCESS = 'PROMOTION_CATEGORY_LISTING_SUCCESS'\nconst ROOT_URL = API_ROOT;\n\nexport function categoryTypeListing(params) {\n  return axios({\n    method: 'GET',\n    params: params,\n    url: `${ROOT_URL}/serviceprovider/getPromotionCategoryUsingMicroservice`,\n  });\n}\n\n\nexport function createPromotionUsingMicroservice(data) {\n    return axios({\n      method: 'POST',\n      data: data,\n      url: `${ROOT_URL}/serviceprovider/createPromotionUsingMicroservice`\n    });\n  }\n\n\nexport function promotionListingUsingMicroservice(params) {\n    return axios({\n      method: 'GET',\n      params: params,\n      url: `${ROOT_URL}/serviceprovider/promotionListingUsingMicroservice`,\n    });\n  }\n  \n  export function promotionListingSuccess(payload){\n    return {\n        type: PROMOTION_LISTING_SUCCESS,\n        payload: payload\n      }\n  }\n\n  \nexport function deletePromotionSuccess(payload) {\n    return {\n      type: DELETE_PROMOTION_SUCCESS,\n      payload: payload\n    };\n  }\n\n\nexport function deletePromotionUsingMicroservice(data) {\n    console.log(data,\"dataPayload\")\n    return axios({\n      method: 'DELETE',\n      data: data,\n      url: `${ROOT_URL}/serviceprovider/deletePromotionUsingMicroservice`\n    });\n  }\n  \n  export function promotionByIdUsingMicroservice(params) {\n    return axios({\n      method: 'GET',\n      params: params,\n      url: `${ROOT_URL}/serviceprovider/promotionByIdUsingMicroservice`,\n    });\n  }\n  \n  export function updatePromotionUsingMicroservice(data) {\n    return axios({\n      method: 'POST',\n      data: data,\n      url: `${ROOT_URL}/serviceprovider/updatePromotionUsingMicroservice`\n    });\n  }\n\n\nexport function createPromotionCategoryUsingMicroservice(data) {\n  return axios({\n    method: 'POST',\n    data: data,\n    url: `${ROOT_URL}/serviceprovider/createPromotionCategoryUsingMicroservice`\n  });\n}\nexport function updatePromotionCategoryUsingMicroservice(data) {\n  return axios({\n    method: 'POST',\n    data: data,\n    url: `${ROOT_URL}/serviceprovider/updatePromotionCategoryUsingMicroservice`\n  });\n}\n\n\n  \nexport function getPromotionCategoryUsingMicroservice(params) {\n  return axios({\n    method: 'GET',\n    params: params,\n    url: `${ROOT_URL}/serviceprovider/getPromotionCategoryUsingMicroservice`,\n  });\n}\n\nexport function promotionCatListingSuccess(payload){\n  return {\n      type: PROMOTION_CATEGORY_LISTING_SUCCESS,\n      payload: payload\n    }\n}\n\nexport function getPromotionCategoryByIdUsingMicroservice(params) {\n  return axios({\n    method: 'GET',\n    params: params,\n    url: `${ROOT_URL}/serviceprovider/getPromotionCategoryByIdUsingMicroservice`,\n  });\n}\n\nexport function enrollPromotionThroughAdminUsingMicroservice(data) {\n  return axios({\n    method: \"POST\",\n    data: data,\n    url: `${ROOT_URL}/serviceprovider/enrollPromotionThroughAdminUsingMicroservice`,\n  });\n}\n\nexport function promotionReporting(params) {\n  return axios({\n    method: 'GET',\n    params: params,\n    url: `${ROOT_URL}/serviceprovider/promotionReportingUsingMicroservice`,\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}