{"ast":null,"code":"var ValidateSetting = function ValidateSetting(values) {\n  var errors = {};\n  if (!values.fixedOvertime || values.fixedOvertime < 0 || isNaN(values.fixedOvertime)) {\n    errors.fixedOvertime = 'Enter fixed over time';\n  }\n  if (!values.overtimePerHour || values.overtimePerHour < 0 || isNaN(values.overtimePerHour)) {\n    errors.overtimePerHour = 'Enter overtime per hour';\n  }\n  if (!values.fixedMinimumOrders || values.fixedMinimumOrders < 0 || isNaN(values.fixedMinimumOrders)) {\n    errors.fixedMinimumOrders = 'Enter fixed minimum order';\n  }\n  if (!values.requiredAcceptanceRate || values.requiredAcceptanceRate < 0 || isNaN(values.requiredAcceptanceRate)) {\n    errors.requiredAcceptanceRate = 'Enter required acceptance rate for incentive';\n  }\n  if (!values.fixedIncentivePerOrder || values.fixedIncentivePerOrder < 0 || isNaN(values.fixedIncentivePerOrder)) {\n    errors.fixedIncentivePerOrder = 'Enter fixed incentive per order';\n  }\n  if (!values.incentiveDeduction || values.incentiveDeduction < 0 || isNaN(values.incentiveDeduction)) {\n    errors.incentiveDeduction = 'Enter incentive deduction if condition not matched';\n  }\n  if (!values.firstShiftSalary || values.firstShiftSalary < 0 || isNaN(values.firstShiftSalary)) {\n    errors.firstShiftSalary = 'Enter first shift salary amount';\n  }\n  if (!values.secondShiftSalary || values.secondShiftSalary < 0 || isNaN(values.secondShiftSalary)) {\n    errors.secondShiftSalary = 'Enter second shift salary amount';\n  }\n  if (!values.firstShiftStartTime) {\n    errors.firstShiftStartTime = 'Enter start time of first shift';\n  }\n  if (!values.firstShiftEndTime) {\n    errors.firstShiftEndTime = 'Enter end time of first shift';\n  }\n  if (!values.secondShiftStartTime) {\n    errors.secondShiftStartTime = 'Enter start time of second shift';\n  }\n  if (!values.secondShiftEndTime) {\n    errors.secondShiftEndTime = 'Enter end time of second shift';\n  }\n  return errors;\n};\nexport default ValidateSetting;","map":{"version":3,"names":["ValidateSetting","values","errors","fixedOvertime","isNaN","overtimePerHour","fixedMinimumOrders","requiredAcceptanceRate","fixedIncentivePerOrder","incentiveDeduction","firstShiftSalary","secondShiftSalary","firstShiftStartTime","firstShiftEndTime","secondShiftStartTime","secondShiftEndTime"],"sources":["/home/hardik/gatoes-admin-ui/src/components/deliveryagent/ValidateSetting.js"],"sourcesContent":["const ValidateSetting = values => {\n  const errors = {};\n\n  if (!values.fixedOvertime || values.fixedOvertime < 0 || isNaN(values.fixedOvertime)) {\n    errors.fixedOvertime = 'Enter fixed over time';\n  }\n  if (!values.overtimePerHour || values.overtimePerHour < 0 || isNaN(values.overtimePerHour)) {\n    errors.overtimePerHour = 'Enter overtime per hour';\n  }\n  if (!values.fixedMinimumOrders || values.fixedMinimumOrders < 0 || isNaN(values.fixedMinimumOrders)) {\n    errors.fixedMinimumOrders = 'Enter fixed minimum order';\n  }\n  if (!values.requiredAcceptanceRate || values.requiredAcceptanceRate < 0 || isNaN(values.requiredAcceptanceRate)) {\n    errors.requiredAcceptanceRate = 'Enter required acceptance rate for incentive';\n  }\n  if (!values.fixedIncentivePerOrder || values.fixedIncentivePerOrder < 0 || isNaN(values.fixedIncentivePerOrder)) {\n    errors.fixedIncentivePerOrder = 'Enter fixed incentive per order';\n  }\n  if (!values.incentiveDeduction || values.incentiveDeduction < 0 || isNaN(values.incentiveDeduction)) {\n    errors.incentiveDeduction = 'Enter incentive deduction if condition not matched';\n  }\n\n  if (!values.firstShiftSalary || values.firstShiftSalary < 0 || isNaN(values.firstShiftSalary)) {\n    errors.firstShiftSalary = 'Enter first shift salary amount';\n  }\n  if (!values.secondShiftSalary || values.secondShiftSalary < 0 || isNaN(values.secondShiftSalary)) {\n    errors.secondShiftSalary = 'Enter second shift salary amount';\n  }\n  if (!values.firstShiftStartTime) {\n    errors.firstShiftStartTime = 'Enter start time of first shift';\n  }\n  if (!values.firstShiftEndTime) {\n    errors.firstShiftEndTime = 'Enter end time of first shift';\n  }\n  if (!values.secondShiftStartTime) {\n    errors.secondShiftStartTime = 'Enter start time of second shift';\n  }\n  if (!values.secondShiftEndTime) {\n    errors.secondShiftEndTime = 'Enter end time of second shift';\n  }\n\n\n  \n\n  return errors;\n}\nexport default ValidateSetting;"],"mappings":"AAAA,IAAMA,eAAe,GAAG,SAAlBA,eAAeA,CAAGC,MAAM,EAAI;EAChC,IAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAI,CAACD,MAAM,CAACE,aAAa,IAAIF,MAAM,CAACE,aAAa,GAAG,CAAC,IAAIC,KAAK,CAACH,MAAM,CAACE,aAAa,CAAC,EAAE;IACpFD,MAAM,CAACC,aAAa,GAAG,uBAAuB;EAChD;EACA,IAAI,CAACF,MAAM,CAACI,eAAe,IAAIJ,MAAM,CAACI,eAAe,GAAG,CAAC,IAAID,KAAK,CAACH,MAAM,CAACI,eAAe,CAAC,EAAE;IAC1FH,MAAM,CAACG,eAAe,GAAG,yBAAyB;EACpD;EACA,IAAI,CAACJ,MAAM,CAACK,kBAAkB,IAAIL,MAAM,CAACK,kBAAkB,GAAG,CAAC,IAAIF,KAAK,CAACH,MAAM,CAACK,kBAAkB,CAAC,EAAE;IACnGJ,MAAM,CAACI,kBAAkB,GAAG,2BAA2B;EACzD;EACA,IAAI,CAACL,MAAM,CAACM,sBAAsB,IAAIN,MAAM,CAACM,sBAAsB,GAAG,CAAC,IAAIH,KAAK,CAACH,MAAM,CAACM,sBAAsB,CAAC,EAAE;IAC/GL,MAAM,CAACK,sBAAsB,GAAG,8CAA8C;EAChF;EACA,IAAI,CAACN,MAAM,CAACO,sBAAsB,IAAIP,MAAM,CAACO,sBAAsB,GAAG,CAAC,IAAIJ,KAAK,CAACH,MAAM,CAACO,sBAAsB,CAAC,EAAE;IAC/GN,MAAM,CAACM,sBAAsB,GAAG,iCAAiC;EACnE;EACA,IAAI,CAACP,MAAM,CAACQ,kBAAkB,IAAIR,MAAM,CAACQ,kBAAkB,GAAG,CAAC,IAAIL,KAAK,CAACH,MAAM,CAACQ,kBAAkB,CAAC,EAAE;IACnGP,MAAM,CAACO,kBAAkB,GAAG,oDAAoD;EAClF;EAEA,IAAI,CAACR,MAAM,CAACS,gBAAgB,IAAIT,MAAM,CAACS,gBAAgB,GAAG,CAAC,IAAIN,KAAK,CAACH,MAAM,CAACS,gBAAgB,CAAC,EAAE;IAC7FR,MAAM,CAACQ,gBAAgB,GAAG,iCAAiC;EAC7D;EACA,IAAI,CAACT,MAAM,CAACU,iBAAiB,IAAIV,MAAM,CAACU,iBAAiB,GAAG,CAAC,IAAIP,KAAK,CAACH,MAAM,CAACU,iBAAiB,CAAC,EAAE;IAChGT,MAAM,CAACS,iBAAiB,GAAG,kCAAkC;EAC/D;EACA,IAAI,CAACV,MAAM,CAACW,mBAAmB,EAAE;IAC/BV,MAAM,CAACU,mBAAmB,GAAG,iCAAiC;EAChE;EACA,IAAI,CAACX,MAAM,CAACY,iBAAiB,EAAE;IAC7BX,MAAM,CAACW,iBAAiB,GAAG,+BAA+B;EAC5D;EACA,IAAI,CAACZ,MAAM,CAACa,oBAAoB,EAAE;IAChCZ,MAAM,CAACY,oBAAoB,GAAG,kCAAkC;EAClE;EACA,IAAI,CAACb,MAAM,CAACc,kBAAkB,EAAE;IAC9Bb,MAAM,CAACa,kBAAkB,GAAG,gCAAgC;EAC9D;EAKA,OAAOb,MAAM;AACf,CAAC;AACD,eAAeF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}