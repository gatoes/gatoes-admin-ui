{"ast":null,"code":"// import React, { Component, Suspense } from 'react';\n// import { toast } from 'react-toastify';\n// import { connect } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import AddRiderDocs from './AddRiderDocs';\n// import DocsSlide from './DocsSlide';\n// import Modal from '../../Modal';\n// import { riderDocsListing, riderDocsListingSuccess } from '../../actions/deliveryagent';\n\n// class DocsListing extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       riderDocsList: props.riderDocsList,\n//       status: props.status,\n//       driver_id: this.props.match.params.index\n//     }\n//     this.updateDocs = this.updateDocs.bind(this);\n//   }\n\n//   componentDidMount(){\n//     this.fetchRecords();\n//   }\n\n//   fetchRecords(){\n//     riderDocsListing({driver_id : this.state.driver_id}).then((response) => {\n//       this.props.riderDocsListingSuccess(response.data.data);\n//     })\n//   }\n\n//   componentWillReceiveProps(nextProps){\n//     if(this.props.status != nextProps.status && nextProps.compName == 'riderdocs'){\n//       this.setState({\n//         riderDocsList: nextProps.riderDocsList,\n//         status: nextProps.status\n//       });\n//     }\n//   }\n\n//   addRiderDocsPanel(e){\n//     window.getFooter().setState({\n//       renderElement: <Modal \n//               id=\"business-detail-modal\"\n//               show={true}\n//               onHide={this.hide}\n//               header={<h4 className=\"modal-title\">Rider Documents</h4>}\n//               body={<AddRiderDocs updateDocs={this.updateDocs} driver_id={this.state.driver_id} />}\n//             />\n//     });\n//   }\n\n//   updateDocs(result){\n//     window.$$('body').removeClass('modal-open');\n//     window.$$('body').find('.modal-backdrop').removeClass('modal-backdrop');\n//     this.hide();\n//   }\n\n//   hide(){\n//     window.getFooter().setState({\n//         renderElement: null\n//     });\n//   }\n\n//   render() {\n//     const { riderDocsList} = this.state;\n\n//     return (\n//       <div className=\"right-ui-block\">\n//         <div className=\"scrollspy-example\">\n//           <div className=\"rm-content\">\n\n//             <div className=\"row menu-top-block\">\n//               <div className=\"col-sm-5 tl-block align-self-center\">\n//                 <h4 className=\"heading\">Rider Documents</h4>\n//               </div>\n//               <div className=\"col-sm-7 tr-block text-right align-self-center\">\n//                 <a href=\"javascript:void(0);\" onClick={this.addRiderDocsPanel.bind(this)}><button className=\"btn green-btn\"><i className=\"material-icons\">add_circle_outline</i>ADD NEW</button></a>\n//               </div>\n//             </div>\n\n//             <div className=\"row\">\n//               <div className=\"col-sm-12\">\n//                 <div className=\"result-listing\">\n//                   <table>\n//                     <thead>\n//                       <tr>\n//                         <th>Sr.no.</th>\n//                         <th>Name</th> \n//                         <th>Expiry Date</th>\n//                         <th>Action</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                     {riderDocsList && riderDocsList.length > 0 ? (\n//                       riderDocsList.map((obj, index) => (\n//                         <DocsSlide\n//                           slideData={{ ...obj }}\n//                           index={index}\n//                           key={obj.id || index} // Fallback to index if obj.id is undefined\n//                         />\n//                       ))\n//                     ) : (\n//                       <tr>\n//                         <td colSpan=\"4\">No documents available.</td>\n//                       </tr>\n//                     )}\n//                   </tbody>\n\n//                   </table>\n//                 </div>\n//               </div>\n//             </div>\n\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// const mapStatesToProps = (state, ownProps) => {\n//   return {\n//     riderDocsList: [...state.DeliveryAgent.rider_docs],\n//     status: state.DeliveryAgent.status,\n//     compName: state.DeliveryAgent.compName\n//   }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     riderDocsListingSuccess: (payload) => {\n//       dispatch(riderDocsListingSuccess(payload));\n//     },\n//   };\n// }\n\n// export default connect(mapStatesToProps, mapDispatchToProps)(DocsListing);\n\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import AddRiderDocs from './AddRiderDocs';\n// import DocsSlide from './DocsSlide';\n// import Modal from '../../Modal';\n// import { riderDocsListing, riderDocsListingSuccess } from '../../actions/deliveryagent';\n\n// class DocsListing extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       riderDocsList: props.riderDocsList,\n//       status: props.status,\n//       driver_id: this.props.match.params.index,\n//     };\n//     this.updateDocs = this.updateDocs.bind(this);\n//   }\n\n//   componentDidMount() {\n//     this.fetchRecords();\n//   }\n\n//   fetchRecords() {\n//     riderDocsListing({ driver_id: this.state.driver_id }).then((response) => {\n//       this.props.riderDocsListingSuccess(response.data.data);\n//     });\n//   }\n\n//   componentWillReceiveProps(nextProps) {\n//     if (this.props.status !== nextProps.status && nextProps.compName === 'riderdocs') {\n//       this.setState({\n//         riderDocsList: nextProps.riderDocsList,\n//         status: nextProps.status,\n//       });\n//     }\n//   }\n\n//   addRiderDocsPanel(e) {\n//     window.getFooter().setState({\n//       renderElement: (\n//         <Modal\n//           id=\"business-detail-modal\"\n//           show={true}\n//           onHide={this.hide}\n//           header={<h4 className=\"modal-title\">Rider Documents</h4>}\n//           body={<AddRiderDocs updateDocs={this.updateDocs} driver_id={this.state.driver_id} />}\n//         />\n//       ),\n//     });\n//   }\n\n//   updateDocs(result) {\n//     window.$$('body').removeClass('modal-open');\n//     window.$$('body').find('.modal-backdrop').removeClass('modal-backdrop');\n//     this.hide();\n//   }\n\n//   hide() {\n//     window.getFooter().setState({\n//       renderElement: null,\n//     });\n//   }\n\n//   render() {\n//     const { riderDocsList } = this.state;\n\n//     return (\n//       <div className=\"right-ui-block\">\n//         <div className=\"scrollspy-example\">\n//           <div className=\"rm-content\">\n//             <div className=\"row menu-top-block\">\n//               <div className=\"col-sm-5 tl-block align-self-center\">\n//                 <h4 className=\"heading\">Rider Documents</h4>\n//               </div>\n//               <div className=\"col-sm-7 tr-block text-right align-self-center\">\n//                 <button className=\"btn green-btn\" onClick={this.addRiderDocsPanel.bind(this)}>\n//                   <i className=\"material-icons\">add_circle_outline</i>ADD NEW\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"row\">\n//               <div className=\"col-sm-12\">\n//                 <div className=\"result-listing\">\n//                   <table>\n//                     <thead>\n//                       <tr>\n//                         <th>Sr.no.</th>\n//                         <th>Name</th>\n//                         <th>Expiry Date</th>\n//                         <th>Action</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {riderDocsList && riderDocsList.length > 0 ? (\n//                         riderDocsList.map((obj, index) => (\n//                           obj ? (\n//                             <DocsSlide\n//                               slideData={{ ...obj }}\n//                               index={index}\n//                               key={obj.id ? `rider-doc-${obj.id}` : `rider-doc-fallback-${index}`} // Unique key\n//                             />\n//                           ) : null\n//                         ))\n//                       ) : (\n//                         <tr>\n//                           <td colSpan=\"4\">No documents available.</td>\n//                         </tr>\n//                       )}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n//             </div>\n\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// const mapStatesToProps = (state) => {\n//   return {\n//     riderDocsList: [...state.DeliveryAgent.rider_docs],\n//     status: state.DeliveryAgent.status,\n//     compName: state.DeliveryAgent.compName,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     riderDocsListingSuccess: (payload) => {\n//       dispatch(riderDocsListingSuccess(payload));\n//     },\n//   };\n// };\n\n// export default connect(mapStatesToProps, mapDispatchToProps)(DocsListing);","map":{"version":3,"names":[],"sources":["/home/hardik/gatoes-admin-ui/src/components/deliveryagent/DocsListing.js"],"sourcesContent":["// import React, { Component, Suspense } from 'react';\n// import { toast } from 'react-toastify';\n// import { connect } from 'react-redux';\n// import { Link } from 'react-router-dom';\n// import AddRiderDocs from './AddRiderDocs';\n// import DocsSlide from './DocsSlide';\n// import Modal from '../../Modal';\n// import { riderDocsListing, riderDocsListingSuccess } from '../../actions/deliveryagent';\n\n\n// class DocsListing extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       riderDocsList: props.riderDocsList,\n//       status: props.status,\n//       driver_id: this.props.match.params.index\n//     }\n//     this.updateDocs = this.updateDocs.bind(this);\n//   }\n \n//   componentDidMount(){\n//     this.fetchRecords();\n//   }\n\n//   fetchRecords(){\n//     riderDocsListing({driver_id : this.state.driver_id}).then((response) => {\n//       this.props.riderDocsListingSuccess(response.data.data);\n//     })\n//   }\n\n//   componentWillReceiveProps(nextProps){\n//     if(this.props.status != nextProps.status && nextProps.compName == 'riderdocs'){\n//       this.setState({\n//         riderDocsList: nextProps.riderDocsList,\n//         status: nextProps.status\n//       });\n//     }\n//   }\n\n//   addRiderDocsPanel(e){\n//     window.getFooter().setState({\n//       renderElement: <Modal \n//               id=\"business-detail-modal\"\n//               show={true}\n//               onHide={this.hide}\n//               header={<h4 className=\"modal-title\">Rider Documents</h4>}\n//               body={<AddRiderDocs updateDocs={this.updateDocs} driver_id={this.state.driver_id} />}\n//             />\n//     });\n//   }\n\n//   updateDocs(result){\n//     window.$$('body').removeClass('modal-open');\n//     window.$$('body').find('.modal-backdrop').removeClass('modal-backdrop');\n//     this.hide();\n//   }\n\n//   hide(){\n//     window.getFooter().setState({\n//         renderElement: null\n//     });\n//   }\n\n//   render() {\n//     const { riderDocsList} = this.state;\n\n//     return (\n//       <div className=\"right-ui-block\">\n//         <div className=\"scrollspy-example\">\n//           <div className=\"rm-content\">\n            \n//             <div className=\"row menu-top-block\">\n//               <div className=\"col-sm-5 tl-block align-self-center\">\n//                 <h4 className=\"heading\">Rider Documents</h4>\n//               </div>\n//               <div className=\"col-sm-7 tr-block text-right align-self-center\">\n//                 <a href=\"javascript:void(0);\" onClick={this.addRiderDocsPanel.bind(this)}><button className=\"btn green-btn\"><i className=\"material-icons\">add_circle_outline</i>ADD NEW</button></a>\n//               </div>\n//             </div>\n\n//             <div className=\"row\">\n//               <div className=\"col-sm-12\">\n//                 <div className=\"result-listing\">\n//                   <table>\n//                     <thead>\n//                       <tr>\n//                         <th>Sr.no.</th>\n//                         <th>Name</th> \n//                         <th>Expiry Date</th>\n//                         <th>Action</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                     {riderDocsList && riderDocsList.length > 0 ? (\n//                       riderDocsList.map((obj, index) => (\n//                         <DocsSlide\n//                           slideData={{ ...obj }}\n//                           index={index}\n//                           key={obj.id || index} // Fallback to index if obj.id is undefined\n//                         />\n//                       ))\n//                     ) : (\n//                       <tr>\n//                         <td colSpan=\"4\">No documents available.</td>\n//                       </tr>\n//                     )}\n//                   </tbody>\n\n//                   </table>\n//                 </div>\n//               </div>\n//             </div>\n                  \n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// const mapStatesToProps = (state, ownProps) => {\n//   return {\n//     riderDocsList: [...state.DeliveryAgent.rider_docs],\n//     status: state.DeliveryAgent.status,\n//     compName: state.DeliveryAgent.compName\n//   }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     riderDocsListingSuccess: (payload) => {\n//       dispatch(riderDocsListingSuccess(payload));\n//     },\n//   };\n// }\n\n// export default connect(mapStatesToProps, mapDispatchToProps)(DocsListing);\n\n\n// import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import AddRiderDocs from './AddRiderDocs';\n// import DocsSlide from './DocsSlide';\n// import Modal from '../../Modal';\n// import { riderDocsListing, riderDocsListingSuccess } from '../../actions/deliveryagent';\n\n// class DocsListing extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       riderDocsList: props.riderDocsList,\n//       status: props.status,\n//       driver_id: this.props.match.params.index,\n//     };\n//     this.updateDocs = this.updateDocs.bind(this);\n//   }\n\n//   componentDidMount() {\n//     this.fetchRecords();\n//   }\n\n//   fetchRecords() {\n//     riderDocsListing({ driver_id: this.state.driver_id }).then((response) => {\n//       this.props.riderDocsListingSuccess(response.data.data);\n//     });\n//   }\n\n//   componentWillReceiveProps(nextProps) {\n//     if (this.props.status !== nextProps.status && nextProps.compName === 'riderdocs') {\n//       this.setState({\n//         riderDocsList: nextProps.riderDocsList,\n//         status: nextProps.status,\n//       });\n//     }\n//   }\n\n//   addRiderDocsPanel(e) {\n//     window.getFooter().setState({\n//       renderElement: (\n//         <Modal\n//           id=\"business-detail-modal\"\n//           show={true}\n//           onHide={this.hide}\n//           header={<h4 className=\"modal-title\">Rider Documents</h4>}\n//           body={<AddRiderDocs updateDocs={this.updateDocs} driver_id={this.state.driver_id} />}\n//         />\n//       ),\n//     });\n//   }\n\n//   updateDocs(result) {\n//     window.$$('body').removeClass('modal-open');\n//     window.$$('body').find('.modal-backdrop').removeClass('modal-backdrop');\n//     this.hide();\n//   }\n\n//   hide() {\n//     window.getFooter().setState({\n//       renderElement: null,\n//     });\n//   }\n\n//   render() {\n//     const { riderDocsList } = this.state;\n\n//     return (\n//       <div className=\"right-ui-block\">\n//         <div className=\"scrollspy-example\">\n//           <div className=\"rm-content\">\n//             <div className=\"row menu-top-block\">\n//               <div className=\"col-sm-5 tl-block align-self-center\">\n//                 <h4 className=\"heading\">Rider Documents</h4>\n//               </div>\n//               <div className=\"col-sm-7 tr-block text-right align-self-center\">\n//                 <button className=\"btn green-btn\" onClick={this.addRiderDocsPanel.bind(this)}>\n//                   <i className=\"material-icons\">add_circle_outline</i>ADD NEW\n//                 </button>\n//               </div>\n//             </div>\n\n//             <div className=\"row\">\n//               <div className=\"col-sm-12\">\n//                 <div className=\"result-listing\">\n//                   <table>\n//                     <thead>\n//                       <tr>\n//                         <th>Sr.no.</th>\n//                         <th>Name</th>\n//                         <th>Expiry Date</th>\n//                         <th>Action</th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {riderDocsList && riderDocsList.length > 0 ? (\n//                         riderDocsList.map((obj, index) => (\n//                           obj ? (\n//                             <DocsSlide\n//                               slideData={{ ...obj }}\n//                               index={index}\n//                               key={obj.id ? `rider-doc-${obj.id}` : `rider-doc-fallback-${index}`} // Unique key\n//                             />\n//                           ) : null\n//                         ))\n//                       ) : (\n//                         <tr>\n//                           <td colSpan=\"4\">No documents available.</td>\n//                         </tr>\n//                       )}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n//             </div>\n\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// const mapStatesToProps = (state) => {\n//   return {\n//     riderDocsList: [...state.DeliveryAgent.rider_docs],\n//     status: state.DeliveryAgent.status,\n//     compName: state.DeliveryAgent.compName,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     riderDocsListingSuccess: (payload) => {\n//       dispatch(riderDocsListingSuccess(payload));\n//     },\n//   };\n// };\n\n// export default connect(mapStatesToProps, mapDispatchToProps)(DocsListing);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}