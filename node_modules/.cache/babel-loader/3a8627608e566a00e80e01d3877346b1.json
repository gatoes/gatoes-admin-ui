{"ast":null,"code":"import _classCallCheck from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/hardik/gatoes-admin-ui/src/components/regions/AddBusinessZone.js\";\nimport React, { Component, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field, SubmissionError, reset, FieldArray, formValueSelector } from 'redux-form';\nimport renderFieldLabelTransition from '../FormFields/renderFieldLabelTransition';\nimport renderField from '../FormFields/renderField';\nimport validate from './ValidateDeliveryRegion';\nimport { addBusinessZone, addBusinessZoneSuccess as _addBusinessZoneSuccess } from '../../actions/regions';\nimport Tooltip from '../common/Tooltip';\nvar AddBusinessZone = /*#__PURE__*/function (_Component) {\n  _inherits(AddBusinessZone, _Component);\n  function AddBusinessZone(props) {\n    var _this;\n    _classCallCheck(this, AddBusinessZone);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBusinessZone).call(this, props));\n    _this.state = {\n      regionDetail: props.regionDetail,\n      geofence: []\n    };\n    _this.bindSlider = _this.bindSlider.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.props.change('regionId', _this.state.regionDetail.id ? _this.state.regionDetail.id : 0);\n    return _this;\n  }\n  _createClass(AddBusinessZone, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      window.addEventListener('load', function () {\n        _this2.bindSlider();\n      });\n      if (document.readyState === \"complete\" || document.readyState === \"interactive\") {\n        this.bindSlider();\n      }\n    }\n  }, {\n    key: \"bindSlider\",\n    value: function bindSlider() {\n      var _this3 = this;\n      var drawingManager;\n      var selectedShape;\n      var colors = ['#1E90FF', '#FF1493', '#32CD32', '#FF8C00', '#4B0082'];\n      var selectedColor;\n      var colorButtons = {};\n      var posstr;\n      var pathstr, bndstr, cntstr, cntrstr, radstr, firstpathstr;\n      var google = window.google;\n      var reqlat = this.state.regionDetail.latitude ? this.state.regionDetail.latitude : 30.7333;\n      var reqlng = this.state.regionDetail.longitude ? this.state.regionDetail.longitude : 76.7794;\n      var patharray = [];\n      var clearSelection = function clearSelection() {\n        if (selectedShape) {\n          if (typeof selectedShape.setEditable == 'function') {\n            selectedShape.setEditable(false);\n          }\n          selectedShape = null;\n        }\n        //curseldiv.innerHTML = \"<b>cursel</b>:\";\n      };\n      var updateCurSelText = function updateCurSelText(shape) {\n        posstr = \"\" + selectedShape.position;\n        if (typeof selectedShape.position == 'object') {\n          posstr = selectedShape.position.toUrlValue();\n        }\n        pathstr = \"\" + selectedShape.getPath;\n        if (typeof selectedShape.getPath == 'function') {\n          for (var i = 0; i < selectedShape.getPath().getLength(); i++) {\n            patharray.push(selectedShape.getPath().getAt(i).toUrlValue().split(','));\n          }\n          patharray.push(selectedShape.getPath().getAt(0).toUrlValue().split(','));\n\n          // pathstr = \"[ \";\n          // for (var i = 0; i < selectedShape.getPath().getLength(); i++) {\n          //   // .toUrlValue(5) limits number of decimals, default is 6 but can do more\n          //   if(i == 0){\n          //     firstpathstr = selectedShape.getPath().getAt(i).toUrlValue();\n          //   }\n          //   pathstr += selectedShape.getPath().getAt(i).toUrlValue() + \" , \";\n          // }\n          // pathstr += firstpathstr;\n          // pathstr += \"]\";\n        }\n        bndstr = \"\" + selectedShape.getBounds;\n        cntstr = \"\" + selectedShape.getBounds;\n        if (typeof selectedShape.getBounds == 'function') {\n          var tmpbounds = selectedShape.getBounds();\n          cntstr = \"\" + tmpbounds.getCenter().toUrlValue();\n          bndstr = \"[NE: \" + tmpbounds.getNorthEast().toUrlValue() + \" SW: \" + tmpbounds.getSouthWest().toUrlValue() + \"]\";\n        }\n        cntrstr = \"\" + selectedShape.getCenter;\n        if (typeof selectedShape.getCenter == 'function') {\n          cntrstr = \"\" + selectedShape.getCenter().toUrlValue();\n        }\n        radstr = \"\" + selectedShape.getRadius;\n        if (typeof selectedShape.getRadius == 'function') {\n          radstr = \"\" + selectedShape.getRadius();\n        }\n\n        // pathstr = pathstr.split(pathstr,' , ');\n        _this3.props.change('regionCoordinates', patharray);\n\n        //curseldiv.innerHTML = \"<b>cursel</b>: \" + selectedShape.type + \" \" + selectedShape + \"; <i>pos</i>: \" + posstr + \" ; <i>path</i>: \" + pathstr + \" ; <i>bounds</i>: \" + bndstr + \" ; <i>Cb</i>: \" + cntstr + \" ; <i>radius</i>: \" + radstr + \" ; <i>Cr</i>: \" + cntrstr ;\n      };\n      var setSelection = function setSelection(shape, isNotMarker) {\n        clearSelection();\n        selectedShape = shape;\n        if (isNotMarker) shape.setEditable(true);\n        selectColor(shape.get('fillColor') || shape.get('strokeColor'));\n        updateCurSelText(shape);\n      };\n      var deleteSelectedShape = function deleteSelectedShape() {\n        if (selectedShape) {\n          selectedShape.setMap(null);\n          patharray = [];\n          _this3.props.change('regionCoordinates', []);\n        }\n      };\n      var selectColor = function selectColor(color) {\n        selectedColor = color;\n        for (var i = 0; i < colors.length; ++i) {\n          var currColor = colors[i];\n          //colorButtons[currColor].style.border = currColor == color ? '2px solid #789' : '2px solid #fff';\n        }\n        // Retrieves the current options from the drawing manager and replaces the\n        // stroke or fill color as appropriate.\n        var polylineOptions = drawingManager.get('polylineOptions');\n        polylineOptions.strokeColor = color;\n        drawingManager.set('polylineOptions', polylineOptions);\n        var rectangleOptions = drawingManager.get('rectangleOptions');\n        rectangleOptions.fillColor = color;\n        drawingManager.set('rectangleOptions', rectangleOptions);\n        var circleOptions = drawingManager.get('circleOptions');\n        circleOptions.fillColor = color;\n        drawingManager.set('circleOptions', circleOptions);\n        var polygonOptions = drawingManager.get('polygonOptions');\n        polygonOptions.fillColor = color;\n        drawingManager.set('polygonOptions', polygonOptions);\n      };\n      var setSelectedShapeColor = function setSelectedShapeColor(color) {\n        if (selectedShape) {\n          if (selectedShape.type == google.maps.drawing.OverlayType.POLYLINE) {\n            selectedShape.set('strokeColor', color);\n          } else {\n            selectedShape.set('fillColor', color);\n          }\n        }\n      };\n      var makeColorButton = function makeColorButton(color) {\n        var button = document.createElement('span');\n        button.className = 'color-button';\n        button.style.backgroundColor = color;\n        google.maps.event.addDomListener(button, 'click', function () {\n          selectColor(color);\n          setSelectedShapeColor(color);\n        });\n        return button;\n      };\n      var buildColorPalette = function buildColorPalette() {\n        var colorPalette = document.getElementById('color-palette');\n        for (var i = 0; i < colors.length; ++i) {\n          var currColor = colors[i];\n          var colorButton = makeColorButton(currColor);\n          colorPalette.appendChild(colorButton);\n          colorButtons[currColor] = colorButton;\n        }\n        selectColor(colors[0]);\n      };\n      var map; //= new google.maps.Map(document.getElementById('map'), {\n      // these must have global refs too!:\n      var placeMarkers = [];\n      var input;\n      var searchBox;\n      var curposdiv;\n      var curseldiv;\n      var deletePlacesSearchResults = function deletePlacesSearchResults() {\n        for (var i = 0, marker; marker = placeMarkers[i]; i++) {\n          marker.setMap(null);\n        }\n        placeMarkers = [];\n        input.value = '';\n      };\n      window.$$('#business-detail-modal').on('shown.bs.modal', function () {\n        initialize();\n      });\n      var initialize = function initialize() {\n        map = new google.maps.Map(document.getElementById('map'), {\n          zoom: 12,\n          center: new google.maps.LatLng(reqlat, reqlng),\n          mapTypeId: google.maps.MapTypeId.ROADMAP,\n          disableDefaultUI: false,\n          zoomControl: true\n        });\n        //curposdiv = document.getElementById('curpos');\n        //curseldiv = document.getElementById('cursel');\n        var polyOptions = {\n          strokeWeight: 0,\n          fillOpacity: 0.45,\n          editable: true\n        };\n        // Creates a drawing manager attached to the map that allows the user to draw\n        // markers, lines, and shapes.\n        drawingManager = new google.maps.drawing.DrawingManager({\n          drawingMode: google.maps.drawing.OverlayType.POLYGON,\n          markerOptions: {\n            draggable: true,\n            editable: true\n          },\n          polylineOptions: {\n            editable: true\n          },\n          drawingControl: true,\n          drawingControlOptions: {\n            position: google.maps.ControlPosition.TOP_CENTER,\n            drawingModes: ['polygon']\n          },\n          rectangleOptions: polyOptions,\n          circleOptions: polyOptions,\n          polygonOptions: polyOptions,\n          map: map\n        });\n        google.maps.event.addListener(drawingManager, 'overlaycomplete', function (e) {\n          var isNotMarker = e.type != google.maps.drawing.OverlayType.MARKER;\n          drawingManager.setDrawingMode(null);\n          var newShape = e.overlay;\n          newShape.type = e.type;\n          google.maps.event.addListener(newShape, 'click', function () {\n            setSelection(newShape, isNotMarker);\n          });\n          google.maps.event.addListener(newShape, 'drag', function () {\n            updateCurSelText(newShape);\n          });\n          google.maps.event.addListener(newShape, 'dragend', function () {\n            updateCurSelText(newShape);\n          });\n          setSelection(newShape, isNotMarker);\n          setTimeout(function () {\n            if (!newShape.editable) {\n              patharray = [];\n              _this3.props.change('regionCoordinates', []);\n            }\n          }, 1);\n          //console.log('777', newShape);\n        });\n        // Clear the current selection when the drawing mode is changed, or when the\n        // map is clicked.\n        google.maps.event.addListener(drawingManager, 'drawingmode_changed', clearSelection);\n        google.maps.event.addListener(map, 'click', clearSelection);\n        google.maps.event.addDomListener(document.getElementById('delete-button'), 'click', deleteSelectedShape);\n        //buildColorPalette();\n\n        // Create the search box and link it to the UI element.\n        input = /** @type {HTMLInputElement} */ //var\n        document.getElementById('pac-input');\n        //map.controls[google.maps.ControlPosition.TOP_RIGHT].push(input);\n        //\n        var DelPlcButDiv = document.createElement('div');\n        DelPlcButDiv.style.backgroundColor = '#fff';\n        DelPlcButDiv.style.cursor = 'pointer';\n        DelPlcButDiv.innerHTML = 'DEL';\n        map.controls[google.maps.ControlPosition.TOP_RIGHT].push(DelPlcButDiv);\n        google.maps.event.addDomListener(DelPlcButDiv, 'click', deletePlacesSearchResults);\n        searchBox = new google.maps.places.SearchBox(\n        //var\n        /** @type {HTMLInputElement} */\n        input);\n        // Listen for the event fired when the user selects an item from the\n        // pick list. Retrieve the matching places for that item.\n        google.maps.event.addListener(searchBox, 'places_changed', function () {\n          var places = searchBox.getPlaces();\n          if (places.length == 0) {\n            return;\n          }\n          for (var i = 0, marker; marker = placeMarkers[i]; i++) {\n            marker.setMap(null);\n          }\n          // For each place, get the icon, place name, and location.\n          placeMarkers = [];\n          var bounds = new google.maps.LatLngBounds();\n          for (var i = 0, place; place = places[i]; i++) {\n            var image = {\n              url: place.icon,\n              size: new google.maps.Size(71, 71),\n              origin: new google.maps.Point(0, 0),\n              anchor: new google.maps.Point(17, 34),\n              scaledSize: new google.maps.Size(25, 25)\n            };\n            // Create a marker for each place.\n            var marker = new google.maps.Marker({\n              map: map,\n              icon: image,\n              title: place.name,\n              position: place.geometry.location\n            });\n            placeMarkers.push(marker);\n            bounds.extend(place.geometry.location);\n          }\n          map.fitBounds(bounds);\n        });\n        // Bias the SearchBox results towards places that are within the bounds of the\n        // current map's viewport.\n        google.maps.event.addListener(map, 'bounds_changed', function () {\n          var bounds = map.getBounds();\n          searchBox.setBounds(bounds);\n          //curposdiv.innerHTML = \"<b>curpos</b> Z: \" + map.getZoom() + \" C: \" + map.getCenter().toUrlValue();\n        });\n      };\n      google.maps.event.addDomListener(window, 'load', initialize);\n    }\n  }, {\n    key: \"submitMenuForm\",\n    value: function submitMenuForm(values) {\n      var _this4 = this;\n      //console.log('form', values);\n      return addBusinessZone(values).then(function (result) {\n        _this4.props.addBusinessZoneSuccess(result.data.data);\n        toast.success('Business zone added Successfully.');\n        _this4.props.reset();\n        _this4.props.updateBusinessZone(result);\n      }).catch(function (error) {\n        //throw new SubmissionError(error.response.data.error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        handleSubmit = _this$props.handleSubmit,\n        pristine = _this$props.pristine,\n        submitting = _this$props.submitting;\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit(this.submitMenuForm.bind(this)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        name: \"name\",\n        component: renderField,\n        type: \"text\",\n        className: \"form-control\",\n        label: \"Name\",\n        placeholder: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"color-palette\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"javascript:void(0)\",\n        id: \"delete-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 19\n        }\n      }, \"Delete Selected Shape\")), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"curpos\",\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"cursel\",\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"pac-input\",\n        type: \"text\",\n        placeholder: \"Search Box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"map\",\n        style: {\n          width: '700px',\n          height: '300px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 15\n        }\n      }, \"A\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row save-button-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-12 align-self-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: submitting,\n        className: \"btn green-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 83\n        }\n      }, \"check_circle\"), \"SUBMIT DETAILS\", submitting && /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-spinner fa-spin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 158\n        }\n      })))));\n    }\n  }]);\n  return AddBusinessZone;\n}(Component);\nAddBusinessZone = reduxForm({\n  form: 'AddBusinessZoneValue',\n  destroyOnUnmount: true,\n  enableReinitialize: true,\n  keepDirtyOnReinitialize: true,\n  validate: validate\n})(AddBusinessZone);\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addBusinessZoneSuccess: function addBusinessZoneSuccess(payload) {\n      dispatch(_addBusinessZoneSuccess(payload));\n    }\n  };\n};\nexport default connect(null, mapDispatchToProps)(AddBusinessZone);","map":{"version":3,"names":["React","Component","Suspense","toast","connect","reduxForm","Field","SubmissionError","reset","FieldArray","formValueSelector","renderFieldLabelTransition","renderField","validate","addBusinessZone","addBusinessZoneSuccess","Tooltip","AddBusinessZone","_Component","_inherits","props","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","state","regionDetail","geofence","bindSlider","bind","_assertThisInitialized","change","id","_createClass","key","value","componentDidMount","_this2","window","addEventListener","document","readyState","_this3","drawingManager","selectedShape","colors","selectedColor","colorButtons","posstr","pathstr","bndstr","cntstr","cntrstr","radstr","firstpathstr","google","reqlat","latitude","reqlng","longitude","patharray","clearSelection","setEditable","updateCurSelText","shape","position","toUrlValue","getPath","i","getLength","push","getAt","split","getBounds","tmpbounds","getCenter","getNorthEast","getSouthWest","getRadius","setSelection","isNotMarker","selectColor","get","deleteSelectedShape","setMap","color","length","currColor","polylineOptions","strokeColor","set","rectangleOptions","fillColor","circleOptions","polygonOptions","setSelectedShapeColor","type","maps","drawing","OverlayType","POLYLINE","makeColorButton","button","createElement","className","style","backgroundColor","event","addDomListener","buildColorPalette","colorPalette","getElementById","colorButton","appendChild","map","placeMarkers","input","searchBox","curposdiv","curseldiv","deletePlacesSearchResults","marker","$$","on","initialize","Map","zoom","center","LatLng","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","zoomControl","polyOptions","strokeWeight","fillOpacity","editable","DrawingManager","drawingMode","POLYGON","markerOptions","draggable","drawingControl","drawingControlOptions","ControlPosition","TOP_CENTER","drawingModes","addListener","e","MARKER","setDrawingMode","newShape","overlay","setTimeout","DelPlcButDiv","cursor","innerHTML","controls","TOP_RIGHT","places","SearchBox","getPlaces","bounds","LatLngBounds","place","image","url","icon","size","Size","origin","Point","anchor","scaledSize","Marker","title","name","geometry","location","extend","fitBounds","setBounds","submitMenuForm","values","_this4","then","result","data","success","updateBusinessZone","catch","error","render","_this$props","handleSubmit","pristine","submitting","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","component","label","placeholder","href","display","width","height","disabled","form","destroyOnUnmount","enableReinitialize","keepDirtyOnReinitialize","mapDispatchToProps","dispatch","payload"],"sources":["/home/hardik/gatoes-admin-ui/src/components/regions/AddBusinessZone.js"],"sourcesContent":["import React, { Component, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field, SubmissionError, reset, FieldArray, formValueSelector } from 'redux-form';\nimport renderFieldLabelTransition from '../FormFields/renderFieldLabelTransition';\nimport renderField from '../FormFields/renderField';\nimport validate from './ValidateDeliveryRegion';\nimport { addBusinessZone, addBusinessZoneSuccess } from '../../actions/regions';\nimport Tooltip from '../common/Tooltip';\n\nclass AddBusinessZone extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      regionDetail: props.regionDetail,\n      geofence : []\n    }\n    this.bindSlider = this.bindSlider.bind(this);\n    this.props.change('regionId', this.state.regionDetail.id ? this.state.regionDetail.id : 0);\n  }\n\n  componentDidMount(){\n    window.addEventListener('load', () => {\n      this.bindSlider();\n    });\n\n    if(document.readyState === \"complete\" || document.readyState === \"interactive\"){\n      this.bindSlider();\n    }\n  }\n\n  bindSlider(){\n    var drawingManager;\n    var selectedShape;\n    var colors = ['#1E90FF', '#FF1493', '#32CD32', '#FF8C00', '#4B0082'];\n    var selectedColor;\n    var colorButtons = {};\n    var posstr;\n    var pathstr, bndstr, cntstr, cntrstr, radstr, firstpathstr;\n    let google = window.google;\n    let reqlat = this.state.regionDetail.latitude ? this.state.regionDetail.latitude : 30.7333;\n    let reqlng = this.state.regionDetail.longitude ? this.state.regionDetail.longitude : 76.7794;\n    let patharray = [];\n\n    const clearSelection = () => {\n      if (selectedShape) {\n        if (typeof selectedShape.setEditable == 'function') {\n          selectedShape.setEditable(false);\n        }\n        selectedShape = null;\n      }\n      //curseldiv.innerHTML = \"<b>cursel</b>:\";\n    }\n    const updateCurSelText = (shape) => {\n\n      posstr = \"\" + selectedShape.position;\n      if (typeof selectedShape.position == 'object') {\n        posstr = selectedShape.position.toUrlValue();\n      }\n      pathstr = \"\" + selectedShape.getPath;\n      if (typeof selectedShape.getPath == 'function') {\n        for (var i = 0; i < selectedShape.getPath().getLength(); i++) {\n          patharray.push(selectedShape.getPath().getAt(i).toUrlValue().split(','))\n        }\n          patharray.push(selectedShape.getPath().getAt(0).toUrlValue().split(','))\n\n        // pathstr = \"[ \";\n        // for (var i = 0; i < selectedShape.getPath().getLength(); i++) {\n        //   // .toUrlValue(5) limits number of decimals, default is 6 but can do more\n        //   if(i == 0){\n        //     firstpathstr = selectedShape.getPath().getAt(i).toUrlValue();\n        //   }\n        //   pathstr += selectedShape.getPath().getAt(i).toUrlValue() + \" , \";\n        // }\n        // pathstr += firstpathstr;\n        // pathstr += \"]\";\n      }\n      bndstr = \"\" + selectedShape.getBounds;\n      cntstr = \"\" + selectedShape.getBounds;\n      if (typeof selectedShape.getBounds == 'function') {\n        var tmpbounds = selectedShape.getBounds();\n        cntstr = \"\" + tmpbounds.getCenter().toUrlValue();\n        bndstr = \"[NE: \" + tmpbounds.getNorthEast().toUrlValue() + \" SW: \" + tmpbounds.getSouthWest().toUrlValue() + \"]\";\n      }\n      cntrstr = \"\" + selectedShape.getCenter;\n      if (typeof selectedShape.getCenter == 'function') {\n        cntrstr = \"\" + selectedShape.getCenter().toUrlValue();\n      }\n      radstr = \"\" + selectedShape.getRadius;\n      if (typeof selectedShape.getRadius == 'function') {\n        radstr = \"\" + selectedShape.getRadius();\n      }\n\n      // pathstr = pathstr.split(pathstr,' , ');\n      this.props.change('regionCoordinates', patharray);\n\n      //curseldiv.innerHTML = \"<b>cursel</b>: \" + selectedShape.type + \" \" + selectedShape + \"; <i>pos</i>: \" + posstr + \" ; <i>path</i>: \" + pathstr + \" ; <i>bounds</i>: \" + bndstr + \" ; <i>Cb</i>: \" + cntstr + \" ; <i>radius</i>: \" + radstr + \" ; <i>Cr</i>: \" + cntrstr ;\n    }\n    const setSelection = (shape, isNotMarker) => {\n      clearSelection();\n      selectedShape = shape;\n      if (isNotMarker)\n        shape.setEditable(true);\n      selectColor(shape.get('fillColor') || shape.get('strokeColor'));\n\n      updateCurSelText(shape);\n    }\n    const deleteSelectedShape = () => {\n      if (selectedShape) {\n        selectedShape.setMap(null);\n        patharray = [];\n        this.props.change('regionCoordinates', []);\n      }\n    }\n    const selectColor = (color) => {\n      selectedColor = color;\n      for (var i = 0; i < colors.length; ++i) {\n        var currColor = colors[i];\n        //colorButtons[currColor].style.border = currColor == color ? '2px solid #789' : '2px solid #fff';\n      }\n      // Retrieves the current options from the drawing manager and replaces the\n      // stroke or fill color as appropriate.\n      var polylineOptions = drawingManager.get('polylineOptions');\n\n      polylineOptions.strokeColor = color;\n      drawingManager.set('polylineOptions', polylineOptions);\n      var rectangleOptions = drawingManager.get('rectangleOptions');\n      rectangleOptions.fillColor = color;\n      drawingManager.set('rectangleOptions', rectangleOptions);\n      var circleOptions = drawingManager.get('circleOptions');\n      circleOptions.fillColor = color;\n      drawingManager.set('circleOptions', circleOptions);\n      var polygonOptions = drawingManager.get('polygonOptions');\n      polygonOptions.fillColor = color;\n      drawingManager.set('polygonOptions', polygonOptions);\n\n    }\n    const setSelectedShapeColor = (color) => {\n      if (selectedShape) {\n        if (selectedShape.type == google.maps.drawing.OverlayType.POLYLINE) {\n          selectedShape.set('strokeColor', color);\n        } else {\n          selectedShape.set('fillColor', color);\n        }\n      }\n    }\n    const makeColorButton = (color) => {\n      var button = document.createElement('span');\n      button.className = 'color-button';\n      button.style.backgroundColor = color;\n      google.maps.event.addDomListener(button, 'click', function() {\n        selectColor(color);\n        setSelectedShapeColor(color);\n      });\n      return button;\n    }\n    const buildColorPalette = () => {\n       var colorPalette = document.getElementById('color-palette');\n       for (var i = 0; i < colors.length; ++i) {\n         var currColor = colors[i];\n         var colorButton = makeColorButton(currColor);\n         colorPalette.appendChild(colorButton);\n         colorButtons[currColor] = colorButton;\n       }\n       selectColor(colors[0]);\n    }\n    \n    var map; //= new google.maps.Map(document.getElementById('map'), {\n    // these must have global refs too!:\n    var placeMarkers = [];\n    var input;\n    var searchBox;\n    var curposdiv;\n    var curseldiv;\n    const deletePlacesSearchResults = () => {\n      for (var i = 0, marker; marker = placeMarkers[i]; i++) {\n        marker.setMap(null);\n      }\n      placeMarkers = [];\n      input.value = ''; \n    }\n\n    window.$$('#business-detail-modal').on('shown.bs.modal', function(){\n      initialize();\n    });\n    \n    const initialize = () => {\n      map = new google.maps.Map(document.getElementById('map'), { \n        zoom: 12,\n        center: new google.maps.LatLng(reqlat,reqlng),\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\n        disableDefaultUI: false,\n        zoomControl: true\n      });\n      //curposdiv = document.getElementById('curpos');\n      //curseldiv = document.getElementById('cursel');\n      var polyOptions = {\n        strokeWeight: 0,\n        fillOpacity: 0.45,\n        editable: true\n      };\n      // Creates a drawing manager attached to the map that allows the user to draw\n      // markers, lines, and shapes.\n      drawingManager = new google.maps.drawing.DrawingManager({\n        drawingMode: google.maps.drawing.OverlayType.POLYGON,\n        markerOptions: {\n          draggable: true,\n          editable: true,\n        },\n        polylineOptions: {\n          editable: true\n        },\n        drawingControl: true,\n        drawingControlOptions: {\n          position: google.maps.ControlPosition.TOP_CENTER,\n          drawingModes: ['polygon']\n        },\n        rectangleOptions: polyOptions,\n        circleOptions: polyOptions,\n        polygonOptions: polyOptions,\n        map: map\n      });\n\n      google.maps.event.addListener(drawingManager, 'overlaycomplete', (e)=> {\n          var isNotMarker = (e.type != google.maps.drawing.OverlayType.MARKER);\n          drawingManager.setDrawingMode(null);\n          var newShape = e.overlay;\n\n          newShape.type = e.type;\n          google.maps.event.addListener(newShape, 'click', function() {\n            setSelection(newShape, isNotMarker);\n          });\n          google.maps.event.addListener(newShape, 'drag', function() {\n            updateCurSelText(newShape);\n          });\n          google.maps.event.addListener(newShape, 'dragend', function() {\n            updateCurSelText(newShape);\n          });\n          setSelection(newShape, isNotMarker);\n          setTimeout(() => {\n            if(!newShape.editable){\n              patharray = [];\n              this.props.change('regionCoordinates', []);\n            }\n          }, 1);\n          //console.log('777', newShape);\n      });\n      // Clear the current selection when the drawing mode is changed, or when the\n      // map is clicked.\n      google.maps.event.addListener(drawingManager, 'drawingmode_changed', clearSelection);\n      google.maps.event.addListener(map, 'click', clearSelection);\n      google.maps.event.addDomListener(document.getElementById('delete-button'), 'click', deleteSelectedShape);\n      //buildColorPalette();\n      \n      // Create the search box and link it to the UI element.\n       input = /** @type {HTMLInputElement} */( //var\n          document.getElementById('pac-input'));\n      //map.controls[google.maps.ControlPosition.TOP_RIGHT].push(input);\n      //\n      var DelPlcButDiv = document.createElement('div');\n      DelPlcButDiv.style.backgroundColor = '#fff';\n      DelPlcButDiv.style.cursor = 'pointer';\n      DelPlcButDiv.innerHTML = 'DEL';\n      map.controls[google.maps.ControlPosition.TOP_RIGHT].push(DelPlcButDiv);\n      google.maps.event.addDomListener(DelPlcButDiv, 'click', deletePlacesSearchResults);\n      searchBox = new google.maps.places.SearchBox( //var\n        /** @type {HTMLInputElement} */(input));\n      // Listen for the event fired when the user selects an item from the\n      // pick list. Retrieve the matching places for that item.\n      google.maps.event.addListener(searchBox, 'places_changed', function() {\n        var places = searchBox.getPlaces();\n        if (places.length == 0) {\n          return;\n        }\n        for (var i = 0, marker; marker = placeMarkers[i]; i++) {\n          marker.setMap(null);\n        }\n        // For each place, get the icon, place name, and location.\n        placeMarkers = [];\n        var bounds = new google.maps.LatLngBounds();\n        for (var i = 0, place; place = places[i]; i++) {\n          var image = {\n            url: place.icon,\n            size: new google.maps.Size(71, 71),\n            origin: new google.maps.Point(0, 0),\n            anchor: new google.maps.Point(17, 34),\n            scaledSize: new google.maps.Size(25, 25)\n          };\n          // Create a marker for each place.\n          var marker = new google.maps.Marker({\n            map: map,\n            icon: image,\n            title: place.name,\n            position: place.geometry.location\n          });\n          placeMarkers.push(marker);\n          bounds.extend(place.geometry.location);\n        }\n        map.fitBounds(bounds);\n      });\n      // Bias the SearchBox results towards places that are within the bounds of the\n      // current map's viewport.\n      google.maps.event.addListener(map, 'bounds_changed', function() {\n        var bounds = map.getBounds();\n        searchBox.setBounds(bounds);\n        //curposdiv.innerHTML = \"<b>curpos</b> Z: \" + map.getZoom() + \" C: \" + map.getCenter().toUrlValue();\n      });\n    }\n    google.maps.event.addDomListener(window, 'load', initialize);\n  }\n  \n  submitMenuForm(values){\n    //console.log('form', values);\n    return addBusinessZone(values)\n    .then((result) => {\n      this.props.addBusinessZoneSuccess(result.data.data);\n      toast.success('Business zone added Successfully.');\n      this.props.reset();\n      this.props.updateBusinessZone(result);\n    }).catch(error => {\n      //throw new SubmissionError(error.response.data.error);\n    })\n    \n  }\n\n  render() {\n    const {handleSubmit, pristine, submitting} = this.props;\n    return (\n      <form onSubmit={handleSubmit(this.submitMenuForm.bind(this))}>\n        <div className=\"form-block\">\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <Field\n                name=\"name\"\n                component={renderField}\n                type=\"text\"\n                className=\"form-control\"\n                label=\"Name\"\n                placeholder=\"\"\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <div id=\"panel\">\n                <div id=\"color-palette\"></div>\n                <div>\n                  <a href=\"javascript:void(0)\" id=\"delete-button\">Delete Selected Shape</a>\n                </div>\n\n                <div id=\"curpos\" style={{ display: 'none' }}></div>\n                <div id=\"cursel\" style={{ display: 'none' }}></div>\n              \n              </div>\n              <input id=\"pac-input\" type=\"text\" placeholder=\"Search Box\" />\n              <div id=\"map\" style={{ width: '700px', height: '300px' }}>A</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row save-button-block\">\n          <div className=\"col-sm-12 align-self-center\">\n            <button type=\"submit\" disabled={submitting} className=\"btn green-btn\"><i className=\"material-icons\">check_circle</i>SUBMIT DETAILS{submitting && <i className=\"fa fa-spinner fa-spin\"></i>}</button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nAddBusinessZone = reduxForm({\n  form: 'AddBusinessZoneValue',\n  destroyOnUnmount: true,\n  enableReinitialize: true,\n  keepDirtyOnReinitialize: true,\n  validate\n})(AddBusinessZone)\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addBusinessZoneSuccess: (payload) => {\n      dispatch(addBusinessZoneSuccess(payload));\n    },\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(AddBusinessZone);"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,SAAS,EAAEC,KAAK,EAAEC,eAAe,EAAEC,KAAK,EAAEC,UAAU,EAAEC,iBAAiB,QAAQ,YAAY;AACpG,OAAOC,0BAA0B,MAAM,0CAA0C;AACjF,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,eAAe,EAAEC,sBAAsB,IAAtBA,uBAAsB,QAAQ,uBAAuB;AAC/E,OAAOC,OAAO,MAAM,mBAAmB;AAAC,IAElCC,eAAe,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,eAAA,EAAAC,UAAA;EACnB,SAAAD,gBAAYG,KAAK,EAAC;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAL,eAAA;IAChBI,KAAA,GAAAE,0BAAA,OAAAC,eAAA,CAAAP,eAAA,EAAAQ,IAAA,OAAML,KAAK;IACXC,KAAA,CAAKK,KAAK,GAAG;MACXC,YAAY,EAAEP,KAAK,CAACO,YAAY;MAChCC,QAAQ,EAAG;IACb,CAAC;IACDP,KAAA,CAAKQ,UAAU,GAAGR,KAAA,CAAKQ,UAAU,CAACC,IAAI,CAAAC,sBAAA,CAAAA,sBAAA,CAAAV,KAAA,EAAK,CAAC;IAC5CA,KAAA,CAAKD,KAAK,CAACY,MAAM,CAAC,UAAU,EAAEX,KAAA,CAAKK,KAAK,CAACC,YAAY,CAACM,EAAE,GAAGZ,KAAA,CAAKK,KAAK,CAACC,YAAY,CAACM,EAAE,GAAG,CAAC,CAAC;IAAC,OAAAZ,KAAA;EAC7F;EAACa,YAAA,CAAAjB,eAAA;IAAAkB,GAAA;IAAAC,KAAA,WAAAC,kBAAA,EAEkB;MAAA,IAAAC,MAAA;MACjBC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,YAAM;QACpCF,MAAI,CAACT,UAAU,CAAC,CAAC;MACnB,CAAC,CAAC;MAEF,IAAGY,QAAQ,CAACC,UAAU,KAAK,UAAU,IAAID,QAAQ,CAACC,UAAU,KAAK,aAAa,EAAC;QAC7E,IAAI,CAACb,UAAU,CAAC,CAAC;MACnB;IACF;EAAC;IAAAM,GAAA;IAAAC,KAAA,WAAAP,WAAA,EAEW;MAAA,IAAAc,MAAA;MACV,IAAIC,cAAc;MAClB,IAAIC,aAAa;MACjB,IAAIC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;MACpE,IAAIC,aAAa;MACjB,IAAIC,YAAY,GAAG,CAAC,CAAC;MACrB,IAAIC,MAAM;MACV,IAAIC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAEC,YAAY;MAC1D,IAAIC,MAAM,GAAGjB,MAAM,CAACiB,MAAM;MAC1B,IAAIC,MAAM,GAAG,IAAI,CAAC/B,KAAK,CAACC,YAAY,CAAC+B,QAAQ,GAAG,IAAI,CAAChC,KAAK,CAACC,YAAY,CAAC+B,QAAQ,GAAG,OAAO;MAC1F,IAAIC,MAAM,GAAG,IAAI,CAACjC,KAAK,CAACC,YAAY,CAACiC,SAAS,GAAG,IAAI,CAAClC,KAAK,CAACC,YAAY,CAACiC,SAAS,GAAG,OAAO;MAC5F,IAAIC,SAAS,GAAG,EAAE;MAElB,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;QAC3B,IAAIjB,aAAa,EAAE;UACjB,IAAI,OAAOA,aAAa,CAACkB,WAAW,IAAI,UAAU,EAAE;YAClDlB,aAAa,CAACkB,WAAW,CAAC,KAAK,CAAC;UAClC;UACAlB,aAAa,GAAG,IAAI;QACtB;QACA;MACF,CAAC;MACD,IAAMmB,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAK,EAAK;QAElChB,MAAM,GAAG,EAAE,GAAGJ,aAAa,CAACqB,QAAQ;QACpC,IAAI,OAAOrB,aAAa,CAACqB,QAAQ,IAAI,QAAQ,EAAE;UAC7CjB,MAAM,GAAGJ,aAAa,CAACqB,QAAQ,CAACC,UAAU,CAAC,CAAC;QAC9C;QACAjB,OAAO,GAAG,EAAE,GAAGL,aAAa,CAACuB,OAAO;QACpC,IAAI,OAAOvB,aAAa,CAACuB,OAAO,IAAI,UAAU,EAAE;UAC9C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,aAAa,CAACuB,OAAO,CAAC,CAAC,CAACE,SAAS,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;YAC5DR,SAAS,CAACU,IAAI,CAAC1B,aAAa,CAACuB,OAAO,CAAC,CAAC,CAACI,KAAK,CAACH,CAAC,CAAC,CAACF,UAAU,CAAC,CAAC,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC;UAC1E;UACEZ,SAAS,CAACU,IAAI,CAAC1B,aAAa,CAACuB,OAAO,CAAC,CAAC,CAACI,KAAK,CAAC,CAAC,CAAC,CAACL,UAAU,CAAC,CAAC,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC;;UAE1E;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;QACF;QACAtB,MAAM,GAAG,EAAE,GAAGN,aAAa,CAAC6B,SAAS;QACrCtB,MAAM,GAAG,EAAE,GAAGP,aAAa,CAAC6B,SAAS;QACrC,IAAI,OAAO7B,aAAa,CAAC6B,SAAS,IAAI,UAAU,EAAE;UAChD,IAAIC,SAAS,GAAG9B,aAAa,CAAC6B,SAAS,CAAC,CAAC;UACzCtB,MAAM,GAAG,EAAE,GAAGuB,SAAS,CAACC,SAAS,CAAC,CAAC,CAACT,UAAU,CAAC,CAAC;UAChDhB,MAAM,GAAG,OAAO,GAAGwB,SAAS,CAACE,YAAY,CAAC,CAAC,CAACV,UAAU,CAAC,CAAC,GAAG,OAAO,GAAGQ,SAAS,CAACG,YAAY,CAAC,CAAC,CAACX,UAAU,CAAC,CAAC,GAAG,GAAG;QAClH;QACAd,OAAO,GAAG,EAAE,GAAGR,aAAa,CAAC+B,SAAS;QACtC,IAAI,OAAO/B,aAAa,CAAC+B,SAAS,IAAI,UAAU,EAAE;UAChDvB,OAAO,GAAG,EAAE,GAAGR,aAAa,CAAC+B,SAAS,CAAC,CAAC,CAACT,UAAU,CAAC,CAAC;QACvD;QACAb,MAAM,GAAG,EAAE,GAAGT,aAAa,CAACkC,SAAS;QACrC,IAAI,OAAOlC,aAAa,CAACkC,SAAS,IAAI,UAAU,EAAE;UAChDzB,MAAM,GAAG,EAAE,GAAGT,aAAa,CAACkC,SAAS,CAAC,CAAC;QACzC;;QAEA;QACApC,MAAI,CAACvB,KAAK,CAACY,MAAM,CAAC,mBAAmB,EAAE6B,SAAS,CAAC;;QAEjD;MACF,CAAC;MACD,IAAMmB,YAAY,GAAG,SAAfA,YAAYA,CAAIf,KAAK,EAAEgB,WAAW,EAAK;QAC3CnB,cAAc,CAAC,CAAC;QAChBjB,aAAa,GAAGoB,KAAK;QACrB,IAAIgB,WAAW,EACbhB,KAAK,CAACF,WAAW,CAAC,IAAI,CAAC;QACzBmB,WAAW,CAACjB,KAAK,CAACkB,GAAG,CAAC,WAAW,CAAC,IAAIlB,KAAK,CAACkB,GAAG,CAAC,aAAa,CAAC,CAAC;QAE/DnB,gBAAgB,CAACC,KAAK,CAAC;MACzB,CAAC;MACD,IAAMmB,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;QAChC,IAAIvC,aAAa,EAAE;UACjBA,aAAa,CAACwC,MAAM,CAAC,IAAI,CAAC;UAC1BxB,SAAS,GAAG,EAAE;UACdlB,MAAI,CAACvB,KAAK,CAACY,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC;QAC5C;MACF,CAAC;MACD,IAAMkD,WAAW,GAAG,SAAdA,WAAWA,CAAII,KAAK,EAAK;QAC7BvC,aAAa,GAAGuC,KAAK;QACrB,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,MAAM,CAACyC,MAAM,EAAE,EAAElB,CAAC,EAAE;UACtC,IAAImB,SAAS,GAAG1C,MAAM,CAACuB,CAAC,CAAC;UACzB;QACF;QACA;QACA;QACA,IAAIoB,eAAe,GAAG7C,cAAc,CAACuC,GAAG,CAAC,iBAAiB,CAAC;QAE3DM,eAAe,CAACC,WAAW,GAAGJ,KAAK;QACnC1C,cAAc,CAAC+C,GAAG,CAAC,iBAAiB,EAAEF,eAAe,CAAC;QACtD,IAAIG,gBAAgB,GAAGhD,cAAc,CAACuC,GAAG,CAAC,kBAAkB,CAAC;QAC7DS,gBAAgB,CAACC,SAAS,GAAGP,KAAK;QAClC1C,cAAc,CAAC+C,GAAG,CAAC,kBAAkB,EAAEC,gBAAgB,CAAC;QACxD,IAAIE,aAAa,GAAGlD,cAAc,CAACuC,GAAG,CAAC,eAAe,CAAC;QACvDW,aAAa,CAACD,SAAS,GAAGP,KAAK;QAC/B1C,cAAc,CAAC+C,GAAG,CAAC,eAAe,EAAEG,aAAa,CAAC;QAClD,IAAIC,cAAc,GAAGnD,cAAc,CAACuC,GAAG,CAAC,gBAAgB,CAAC;QACzDY,cAAc,CAACF,SAAS,GAAGP,KAAK;QAChC1C,cAAc,CAAC+C,GAAG,CAAC,gBAAgB,EAAEI,cAAc,CAAC;MAEtD,CAAC;MACD,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIV,KAAK,EAAK;QACvC,IAAIzC,aAAa,EAAE;UACjB,IAAIA,aAAa,CAACoD,IAAI,IAAIzC,MAAM,CAAC0C,IAAI,CAACC,OAAO,CAACC,WAAW,CAACC,QAAQ,EAAE;YAClExD,aAAa,CAAC8C,GAAG,CAAC,aAAa,EAAEL,KAAK,CAAC;UACzC,CAAC,MAAM;YACLzC,aAAa,CAAC8C,GAAG,CAAC,WAAW,EAAEL,KAAK,CAAC;UACvC;QACF;MACF,CAAC;MACD,IAAMgB,eAAe,GAAG,SAAlBA,eAAeA,CAAIhB,KAAK,EAAK;QACjC,IAAIiB,MAAM,GAAG9D,QAAQ,CAAC+D,aAAa,CAAC,MAAM,CAAC;QAC3CD,MAAM,CAACE,SAAS,GAAG,cAAc;QACjCF,MAAM,CAACG,KAAK,CAACC,eAAe,GAAGrB,KAAK;QACpC9B,MAAM,CAAC0C,IAAI,CAACU,KAAK,CAACC,cAAc,CAACN,MAAM,EAAE,OAAO,EAAE,YAAW;UAC3DrB,WAAW,CAACI,KAAK,CAAC;UAClBU,qBAAqB,CAACV,KAAK,CAAC;QAC9B,CAAC,CAAC;QACF,OAAOiB,MAAM;MACf,CAAC;MACD,IAAMO,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;QAC7B,IAAIC,YAAY,GAAGtE,QAAQ,CAACuE,cAAc,CAAC,eAAe,CAAC;QAC3D,KAAK,IAAI3C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,MAAM,CAACyC,MAAM,EAAE,EAAElB,CAAC,EAAE;UACtC,IAAImB,SAAS,GAAG1C,MAAM,CAACuB,CAAC,CAAC;UACzB,IAAI4C,WAAW,GAAGX,eAAe,CAACd,SAAS,CAAC;UAC5CuB,YAAY,CAACG,WAAW,CAACD,WAAW,CAAC;UACrCjE,YAAY,CAACwC,SAAS,CAAC,GAAGyB,WAAW;QACvC;QACA/B,WAAW,CAACpC,MAAM,CAAC,CAAC,CAAC,CAAC;MACzB,CAAC;MAED,IAAIqE,GAAG,CAAC,CAAC;MACT;MACA,IAAIC,YAAY,GAAG,EAAE;MACrB,IAAIC,KAAK;MACT,IAAIC,SAAS;MACb,IAAIC,SAAS;MACb,IAAIC,SAAS;MACb,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAA,EAAS;QACtC,KAAK,IAAIpD,CAAC,GAAG,CAAC,EAAEqD,MAAM,EAAEA,MAAM,GAAGN,YAAY,CAAC/C,CAAC,CAAC,EAAEA,CAAC,EAAE,EAAE;UACrDqD,MAAM,CAACrC,MAAM,CAAC,IAAI,CAAC;QACrB;QACA+B,YAAY,GAAG,EAAE;QACjBC,KAAK,CAACjF,KAAK,GAAG,EAAE;MAClB,CAAC;MAEDG,MAAM,CAACoF,EAAE,CAAC,wBAAwB,CAAC,CAACC,EAAE,CAAC,gBAAgB,EAAE,YAAU;QACjEC,UAAU,CAAC,CAAC;MACd,CAAC,CAAC;MAEF,IAAMA,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;QACvBV,GAAG,GAAG,IAAI3D,MAAM,CAAC0C,IAAI,CAAC4B,GAAG,CAACrF,QAAQ,CAACuE,cAAc,CAAC,KAAK,CAAC,EAAE;UACxDe,IAAI,EAAE,EAAE;UACRC,MAAM,EAAE,IAAIxE,MAAM,CAAC0C,IAAI,CAAC+B,MAAM,CAACxE,MAAM,EAACE,MAAM,CAAC;UAC7CuE,SAAS,EAAE1E,MAAM,CAAC0C,IAAI,CAACiC,SAAS,CAACC,OAAO;UACxCC,gBAAgB,EAAE,KAAK;UACvBC,WAAW,EAAE;QACf,CAAC,CAAC;QACF;QACA;QACA,IAAIC,WAAW,GAAG;UAChBC,YAAY,EAAE,CAAC;UACfC,WAAW,EAAE,IAAI;UACjBC,QAAQ,EAAE;QACZ,CAAC;QACD;QACA;QACA9F,cAAc,GAAG,IAAIY,MAAM,CAAC0C,IAAI,CAACC,OAAO,CAACwC,cAAc,CAAC;UACtDC,WAAW,EAAEpF,MAAM,CAAC0C,IAAI,CAACC,OAAO,CAACC,WAAW,CAACyC,OAAO;UACpDC,aAAa,EAAE;YACbC,SAAS,EAAE,IAAI;YACfL,QAAQ,EAAE;UACZ,CAAC;UACDjD,eAAe,EAAE;YACfiD,QAAQ,EAAE;UACZ,CAAC;UACDM,cAAc,EAAE,IAAI;UACpBC,qBAAqB,EAAE;YACrB/E,QAAQ,EAAEV,MAAM,CAAC0C,IAAI,CAACgD,eAAe,CAACC,UAAU;YAChDC,YAAY,EAAE,CAAC,SAAS;UAC1B,CAAC;UACDxD,gBAAgB,EAAE2C,WAAW;UAC7BzC,aAAa,EAAEyC,WAAW;UAC1BxC,cAAc,EAAEwC,WAAW;UAC3BpB,GAAG,EAAEA;QACP,CAAC,CAAC;QAEF3D,MAAM,CAAC0C,IAAI,CAACU,KAAK,CAACyC,WAAW,CAACzG,cAAc,EAAE,iBAAiB,EAAE,UAAC0G,CAAC,EAAI;UACnE,IAAIrE,WAAW,GAAIqE,CAAC,CAACrD,IAAI,IAAIzC,MAAM,CAAC0C,IAAI,CAACC,OAAO,CAACC,WAAW,CAACmD,MAAO;UACpE3G,cAAc,CAAC4G,cAAc,CAAC,IAAI,CAAC;UACnC,IAAIC,QAAQ,GAAGH,CAAC,CAACI,OAAO;UAExBD,QAAQ,CAACxD,IAAI,GAAGqD,CAAC,CAACrD,IAAI;UACtBzC,MAAM,CAAC0C,IAAI,CAACU,KAAK,CAACyC,WAAW,CAACI,QAAQ,EAAE,OAAO,EAAE,YAAW;YAC1DzE,YAAY,CAACyE,QAAQ,EAAExE,WAAW,CAAC;UACrC,CAAC,CAAC;UACFzB,MAAM,CAAC0C,IAAI,CAACU,KAAK,CAACyC,WAAW,CAACI,QAAQ,EAAE,MAAM,EAAE,YAAW;YACzDzF,gBAAgB,CAACyF,QAAQ,CAAC;UAC5B,CAAC,CAAC;UACFjG,MAAM,CAAC0C,IAAI,CAACU,KAAK,CAACyC,WAAW,CAACI,QAAQ,EAAE,SAAS,EAAE,YAAW;YAC5DzF,gBAAgB,CAACyF,QAAQ,CAAC;UAC5B,CAAC,CAAC;UACFzE,YAAY,CAACyE,QAAQ,EAAExE,WAAW,CAAC;UACnC0E,UAAU,CAAC,YAAM;YACf,IAAG,CAACF,QAAQ,CAACf,QAAQ,EAAC;cACpB7E,SAAS,GAAG,EAAE;cACdlB,MAAI,CAACvB,KAAK,CAACY,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC;YAC5C;UACF,CAAC,EAAE,CAAC,CAAC;UACL;QACJ,CAAC,CAAC;QACF;QACA;QACAwB,MAAM,CAAC0C,IAAI,CAACU,KAAK,CAACyC,WAAW,CAACzG,cAAc,EAAE,qBAAqB,EAAEkB,cAAc,CAAC;QACpFN,MAAM,CAAC0C,IAAI,CAACU,KAAK,CAACyC,WAAW,CAAClC,GAAG,EAAE,OAAO,EAAErD,cAAc,CAAC;QAC3DN,MAAM,CAAC0C,IAAI,CAACU,KAAK,CAACC,cAAc,CAACpE,QAAQ,CAACuE,cAAc,CAAC,eAAe,CAAC,EAAE,OAAO,EAAE5B,mBAAmB,CAAC;QACxG;;QAEA;QACCiC,KAAK,GAAG,gCAAiC;QACtC5E,QAAQ,CAACuE,cAAc,CAAC,WAAW,CAAE;QACzC;QACA;QACA,IAAI4C,YAAY,GAAGnH,QAAQ,CAAC+D,aAAa,CAAC,KAAK,CAAC;QAChDoD,YAAY,CAAClD,KAAK,CAACC,eAAe,GAAG,MAAM;QAC3CiD,YAAY,CAAClD,KAAK,CAACmD,MAAM,GAAG,SAAS;QACrCD,YAAY,CAACE,SAAS,GAAG,KAAK;QAC9B3C,GAAG,CAAC4C,QAAQ,CAACvG,MAAM,CAAC0C,IAAI,CAACgD,eAAe,CAACc,SAAS,CAAC,CAACzF,IAAI,CAACqF,YAAY,CAAC;QACtEpG,MAAM,CAAC0C,IAAI,CAACU,KAAK,CAACC,cAAc,CAAC+C,YAAY,EAAE,OAAO,EAAEnC,yBAAyB,CAAC;QAClFH,SAAS,GAAG,IAAI9D,MAAM,CAAC0C,IAAI,CAAC+D,MAAM,CAACC,SAAS;QAAE;QAC5C;QAAgC7C,KAAM,CAAC;QACzC;QACA;QACA7D,MAAM,CAAC0C,IAAI,CAACU,KAAK,CAACyC,WAAW,CAAC/B,SAAS,EAAE,gBAAgB,EAAE,YAAW;UACpE,IAAI2C,MAAM,GAAG3C,SAAS,CAAC6C,SAAS,CAAC,CAAC;UAClC,IAAIF,MAAM,CAAC1E,MAAM,IAAI,CAAC,EAAE;YACtB;UACF;UACA,KAAK,IAAIlB,CAAC,GAAG,CAAC,EAAEqD,MAAM,EAAEA,MAAM,GAAGN,YAAY,CAAC/C,CAAC,CAAC,EAAEA,CAAC,EAAE,EAAE;YACrDqD,MAAM,CAACrC,MAAM,CAAC,IAAI,CAAC;UACrB;UACA;UACA+B,YAAY,GAAG,EAAE;UACjB,IAAIgD,MAAM,GAAG,IAAI5G,MAAM,CAAC0C,IAAI,CAACmE,YAAY,CAAC,CAAC;UAC3C,KAAK,IAAIhG,CAAC,GAAG,CAAC,EAAEiG,KAAK,EAAEA,KAAK,GAAGL,MAAM,CAAC5F,CAAC,CAAC,EAAEA,CAAC,EAAE,EAAE;YAC7C,IAAIkG,KAAK,GAAG;cACVC,GAAG,EAAEF,KAAK,CAACG,IAAI;cACfC,IAAI,EAAE,IAAIlH,MAAM,CAAC0C,IAAI,CAACyE,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;cAClCC,MAAM,EAAE,IAAIpH,MAAM,CAAC0C,IAAI,CAAC2E,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;cACnCC,MAAM,EAAE,IAAItH,MAAM,CAAC0C,IAAI,CAAC2E,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;cACrCE,UAAU,EAAE,IAAIvH,MAAM,CAAC0C,IAAI,CAACyE,IAAI,CAAC,EAAE,EAAE,EAAE;YACzC,CAAC;YACD;YACA,IAAIjD,MAAM,GAAG,IAAIlE,MAAM,CAAC0C,IAAI,CAAC8E,MAAM,CAAC;cAClC7D,GAAG,EAAEA,GAAG;cACRsD,IAAI,EAAEF,KAAK;cACXU,KAAK,EAAEX,KAAK,CAACY,IAAI;cACjBhH,QAAQ,EAAEoG,KAAK,CAACa,QAAQ,CAACC;YAC3B,CAAC,CAAC;YACFhE,YAAY,CAAC7C,IAAI,CAACmD,MAAM,CAAC;YACzB0C,MAAM,CAACiB,MAAM,CAACf,KAAK,CAACa,QAAQ,CAACC,QAAQ,CAAC;UACxC;UACAjE,GAAG,CAACmE,SAAS,CAAClB,MAAM,CAAC;QACvB,CAAC,CAAC;QACF;QACA;QACA5G,MAAM,CAAC0C,IAAI,CAACU,KAAK,CAACyC,WAAW,CAAClC,GAAG,EAAE,gBAAgB,EAAE,YAAW;UAC9D,IAAIiD,MAAM,GAAGjD,GAAG,CAACzC,SAAS,CAAC,CAAC;UAC5B4C,SAAS,CAACiE,SAAS,CAACnB,MAAM,CAAC;UAC3B;QACF,CAAC,CAAC;MACJ,CAAC;MACD5G,MAAM,CAAC0C,IAAI,CAACU,KAAK,CAACC,cAAc,CAACtE,MAAM,EAAE,MAAM,EAAEsF,UAAU,CAAC;IAC9D;EAAC;IAAA1F,GAAA;IAAAC,KAAA,WAAAoJ,eAEcC,MAAM,EAAC;MAAA,IAAAC,MAAA;MACpB;MACA,OAAO5K,eAAe,CAAC2K,MAAM,CAAC,CAC7BE,IAAI,CAAC,UAACC,MAAM,EAAK;QAChBF,MAAI,CAACtK,KAAK,CAACL,sBAAsB,CAAC6K,MAAM,CAACC,IAAI,CAACA,IAAI,CAAC;QACnD1L,KAAK,CAAC2L,OAAO,CAAC,mCAAmC,CAAC;QAClDJ,MAAI,CAACtK,KAAK,CAACZ,KAAK,CAAC,CAAC;QAClBkL,MAAI,CAACtK,KAAK,CAAC2K,kBAAkB,CAACH,MAAM,CAAC;MACvC,CAAC,CAAC,CAACI,KAAK,CAAC,UAAAC,KAAK,EAAI;QAChB;MAAA,CACD,CAAC;IAEJ;EAAC;IAAA9J,GAAA;IAAAC,KAAA,WAAA8J,OAAA,EAEQ;MAAA,IAAAC,WAAA,GACsC,IAAI,CAAC/K,KAAK;QAAhDgL,YAAY,GAAAD,WAAA,CAAZC,YAAY;QAAEC,QAAQ,GAAAF,WAAA,CAARE,QAAQ;QAAEC,UAAU,GAAAH,WAAA,CAAVG,UAAU;MACzC,oBACEtM,KAAA,CAAAwG,aAAA;QAAM+F,QAAQ,EAAEH,YAAY,CAAC,IAAI,CAACZ,cAAc,CAAC1J,IAAI,CAAC,IAAI,CAAC,CAAE;QAAA0K,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAC3D7M,KAAA,CAAAwG,aAAA;QAAKC,SAAS,EAAC,YAAY;QAAA+F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACzB7M,KAAA,CAAAwG,aAAA;QAAKC,SAAS,EAAC,KAAK;QAAA+F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAClB7M,KAAA,CAAAwG,aAAA;QAAKC,SAAS,EAAC,WAAW;QAAA+F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACxB7M,KAAA,CAAAwG,aAAA,CAAClG,KAAK;QACJ4K,IAAI,EAAC,MAAM;QACX4B,SAAS,EAAElM,WAAY;QACvBqF,IAAI,EAAC,MAAM;QACXQ,SAAS,EAAC,cAAc;QACxBsG,KAAK,EAAC,MAAM;QACZC,WAAW,EAAC,EAAE;QAAAR,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACf,CACE,CACF,CAAC,eACN7M,KAAA,CAAAwG,aAAA;QAAKC,SAAS,EAAC,KAAK;QAAA+F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAClB7M,KAAA,CAAAwG,aAAA;QAAKC,SAAS,EAAC,WAAW;QAAA+F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACxB7M,KAAA,CAAAwG,aAAA;QAAKvE,EAAE,EAAC,OAAO;QAAAuK,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACb7M,KAAA,CAAAwG,aAAA;QAAKvE,EAAE,EAAC,eAAe;QAAAuK,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAM,CAAC,eAC9B7M,KAAA,CAAAwG,aAAA;QAAAgG,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACE7M,KAAA,CAAAwG,aAAA;QAAGyG,IAAI,EAAC,oBAAoB;QAAChL,EAAE,EAAC,eAAe;QAAAuK,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAC,uBAAwB,CACrE,CAAC,eAEN7M,KAAA,CAAAwG,aAAA;QAAKvE,EAAE,EAAC,QAAQ;QAACyE,KAAK,EAAE;UAAEwG,OAAO,EAAE;QAAO,CAAE;QAAAV,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAM,CAAC,eACnD7M,KAAA,CAAAwG,aAAA;QAAKvE,EAAE,EAAC,QAAQ;QAACyE,KAAK,EAAE;UAAEwG,OAAO,EAAE;QAAO,CAAE;QAAAV,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAM,CAE/C,CAAC,eACN7M,KAAA,CAAAwG,aAAA;QAAOvE,EAAE,EAAC,WAAW;QAACgE,IAAI,EAAC,MAAM;QAAC+G,WAAW,EAAC,YAAY;QAAAR,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAC,eAC7D7M,KAAA,CAAAwG,aAAA;QAAKvE,EAAE,EAAC,KAAK;QAACyE,KAAK,EAAE;UAAEyG,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAQ,CAAE;QAAAZ,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAC,GAAM,CAC7D,CACF,CACF,CAAC,eACN7M,KAAA,CAAAwG,aAAA;QAAKC,SAAS,EAAC,uBAAuB;QAAA+F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBACpC7M,KAAA,CAAAwG,aAAA;QAAKC,SAAS,EAAC,6BAA6B;QAAA+F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAC1C7M,KAAA,CAAAwG,aAAA;QAAQP,IAAI,EAAC,QAAQ;QAACoH,QAAQ,EAAEf,UAAW;QAAC7F,SAAS,EAAC,eAAe;QAAA+F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,gBAAC7M,KAAA,CAAAwG,aAAA;QAAGC,SAAS,EAAC,gBAAgB;QAAA+F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAAC,cAAe,CAAC,kBAAc,EAACP,UAAU,iBAAItM,KAAA,CAAAwG,aAAA;QAAGC,SAAS,EAAC,uBAAuB;QAAA+F,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAI,CAAU,CAChM,CACF,CACD,CAAC;IAEX;EAAC;EAAA,OAAA5L,eAAA;AAAA,EApW2BhB,SAAS;AAuWvCgB,eAAe,GAAGZ,SAAS,CAAC;EAC1BiN,IAAI,EAAE,sBAAsB;EAC5BC,gBAAgB,EAAE,IAAI;EACtBC,kBAAkB,EAAE,IAAI;EACxBC,uBAAuB,EAAE,IAAI;EAC7B5M,QAAQ,EAARA;AACF,CAAC,CAAC,CAACI,eAAe,CAAC;AAEnB,IAAMyM,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,QAAQ,EAAK;EACvC,OAAO;IACL5M,sBAAsB,EAAE,SAAxBA,sBAAsBA,CAAG6M,OAAO,EAAK;MACnCD,QAAQ,CAAC5M,uBAAsB,CAAC6M,OAAO,CAAC,CAAC;IAC3C;EACF,CAAC;AACH,CAAC;AAED,eAAexN,OAAO,CAAC,IAAI,EAAEsN,kBAAkB,CAAC,CAACzM,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}