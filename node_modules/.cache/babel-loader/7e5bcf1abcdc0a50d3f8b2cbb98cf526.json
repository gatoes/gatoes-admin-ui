{"ast":null,"code":"import _toConsumableArray from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/hardik/gatoes-admin-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { _dispatch, COMMUNICATION_TYPE_LISTING_SUCCESS, DELETE_COMMUNICATION_TYPE_SUCCESS } from '../actions/communication';\nvar INITIAL_STATE = {\n  status: null,\n  msg_type_list: {}\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case COMMUNICATION_TYPE_LISTING_SUCCESS:\n      return _dispatch(_objectSpread({}, state, {\n        msg_type_list: action.payload\n      }), true, 'communicationtypelist');\n      break;\n    case DELETE_COMMUNICATION_TYPE_SUCCESS:\n      return function () {\n        var data = _toConsumableArray(state.msg_type_list);\n        data.splice(action.payload, 1);\n        return _dispatch(_objectSpread({}, state, {\n          msg_type_list: data\n        }), true, 'communicationtypelist');\n      }();\n      break;\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["_dispatch","COMMUNICATION_TYPE_LISTING_SUCCESS","DELETE_COMMUNICATION_TYPE_SUCCESS","INITIAL_STATE","status","msg_type_list","state","arguments","length","undefined","action","type","_objectSpread","payload","data","_toConsumableArray","splice"],"sources":["/home/hardik/gatoes-admin-ui/src/reducers/communication.js"],"sourcesContent":["import {\n  _dispatch,\n  COMMUNICATION_TYPE_LISTING_SUCCESS,\n  DELETE_COMMUNICATION_TYPE_SUCCESS\n} from '../actions/communication';\n\nconst INITIAL_STATE = { status: null, msg_type_list: {} };\n\nexport default function(state = INITIAL_STATE, action) {\n  switch(action.type) {\n    case COMMUNICATION_TYPE_LISTING_SUCCESS:\n      return _dispatch({ ...state, msg_type_list: action.payload }, true, 'communicationtypelist');\n      break;\n    case DELETE_COMMUNICATION_TYPE_SUCCESS:\n      return (() => {\n        const data = [...state.msg_type_list];\n        data.splice(action.payload, 1);\n        return _dispatch({ ...state, msg_type_list: data}, true, 'communicationtypelist');\n      })();\n      break;\n    default:\n      return state;\n  }\n}"],"mappings":";;AAAA,SACEA,SAAS,EACTC,kCAAkC,EAClCC,iCAAiC,QAC5B,0BAA0B;AAEjC,IAAMC,aAAa,GAAG;EAAEC,MAAM,EAAE,IAAI;EAAEC,aAAa,EAAE,CAAC;AAAE,CAAC;AAEzD,eAAe,YAAwC;EAAA,IAA/BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,aAAa;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnD,QAAOC,MAAM,CAACC,IAAI;IAChB,KAAKV,kCAAkC;MACrC,OAAOD,SAAS,CAAAY,aAAA,KAAMN,KAAK;QAAED,aAAa,EAAEK,MAAM,CAACG;MAAO,IAAI,IAAI,EAAE,uBAAuB,CAAC;MAC5F;IACF,KAAKX,iCAAiC;MACpC,OAAQ,YAAM;QACZ,IAAMY,IAAI,GAAAC,kBAAA,CAAOT,KAAK,CAACD,aAAa,CAAC;QACrCS,IAAI,CAACE,MAAM,CAACN,MAAM,CAACG,OAAO,EAAE,CAAC,CAAC;QAC9B,OAAOb,SAAS,CAAAY,aAAA,KAAMN,KAAK;UAAED,aAAa,EAAES;QAAI,IAAG,IAAI,EAAE,uBAAuB,CAAC;MACnF,CAAC,CAAE,CAAC;MACJ;IACF;MACE,OAAOR,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}