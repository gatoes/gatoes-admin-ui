{"ast":null,"code":"var ValidateRefund = function ValidateRefund(values) {\n  var errors = {};\n  if (!values.reorder_reason || values.reorder_reason < 0) {\n    errors.reorder_reason = 'Choose reason';\n  }\n  if (!values.transfer_type || values.transfer_type < 0) {\n    errors.transfer_type = 'Choose transfer type';\n  }\n  if (!values.refund_amount || values.refund_amount < 0 || isNaN(values.refund_amount)) {\n    errors.refund_amount = 'Enter valid refund amount';\n  } else if (values.refund_amount > values.itemTotal) {\n    errors.refund_amount = 'Refund amount should not more than order total';\n  }\n  if (!values.refund_reason || values.refund_reason < 0) {\n    errors.refund_reason = 'Choose reason';\n  } else if (values.refund_reason == 3 && (!values.other_reason || values.other_reason.trim() === '')) {\n    errors.other_reason = 'Enter other reason';\n  }\n  if (!values.who_bear_cost || values.who_bear_cost < 0) {\n    errors.who_bear_cost = 'Choose who bear the reorder cost';\n  }\n\n  // if (!values.items || values.items.length < 1) {\n  //   errors.reorder_type = 'Please choose at least one item';\n  // }\n\n  return errors;\n};\nexport default ValidateRefund;","map":{"version":3,"names":["ValidateRefund","values","errors","reorder_reason","transfer_type","refund_amount","isNaN","itemTotal","refund_reason","other_reason","trim","who_bear_cost"],"sources":["/home/hardik/gatoes-admin-ui/src/components/orders/ValidateRefund.js"],"sourcesContent":["const ValidateRefund = values => {\n  const errors = {};\n  if (!values.reorder_reason || values.reorder_reason < 0) {\n    errors.reorder_reason = 'Choose reason';\n  }\n  if (!values.transfer_type || values.transfer_type < 0) {\n    errors.transfer_type = 'Choose transfer type';\n  }\n  if (!values.refund_amount || values.refund_amount < 0 || isNaN(values.refund_amount)) {\n    errors.refund_amount = 'Enter valid refund amount';\n  } else if(values.refund_amount > values.itemTotal){\n    errors.refund_amount = 'Refund amount should not more than order total';\n  } \n\n\n  if (!values.refund_reason || values.refund_reason < 0) {\n    errors.refund_reason = 'Choose reason';\n  } else if (values.refund_reason == 3 && (!values.other_reason || values.other_reason.trim() === '')) {\n    errors.other_reason = 'Enter other reason';\n  }\n\n  if (!values.who_bear_cost || values.who_bear_cost < 0) {\n    errors.who_bear_cost = 'Choose who bear the reorder cost';\n  }\n\n  // if (!values.items || values.items.length < 1) {\n  //   errors.reorder_type = 'Please choose at least one item';\n  // }\n\n  return errors;\n}\nexport default ValidateRefund;"],"mappings":"AAAA,IAAMA,cAAc,GAAG,SAAjBA,cAAcA,CAAGC,MAAM,EAAI;EAC/B,IAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,IAAI,CAACD,MAAM,CAACE,cAAc,IAAIF,MAAM,CAACE,cAAc,GAAG,CAAC,EAAE;IACvDD,MAAM,CAACC,cAAc,GAAG,eAAe;EACzC;EACA,IAAI,CAACF,MAAM,CAACG,aAAa,IAAIH,MAAM,CAACG,aAAa,GAAG,CAAC,EAAE;IACrDF,MAAM,CAACE,aAAa,GAAG,sBAAsB;EAC/C;EACA,IAAI,CAACH,MAAM,CAACI,aAAa,IAAIJ,MAAM,CAACI,aAAa,GAAG,CAAC,IAAIC,KAAK,CAACL,MAAM,CAACI,aAAa,CAAC,EAAE;IACpFH,MAAM,CAACG,aAAa,GAAG,2BAA2B;EACpD,CAAC,MAAM,IAAGJ,MAAM,CAACI,aAAa,GAAGJ,MAAM,CAACM,SAAS,EAAC;IAChDL,MAAM,CAACG,aAAa,GAAG,gDAAgD;EACzE;EAGA,IAAI,CAACJ,MAAM,CAACO,aAAa,IAAIP,MAAM,CAACO,aAAa,GAAG,CAAC,EAAE;IACrDN,MAAM,CAACM,aAAa,GAAG,eAAe;EACxC,CAAC,MAAM,IAAIP,MAAM,CAACO,aAAa,IAAI,CAAC,KAAK,CAACP,MAAM,CAACQ,YAAY,IAAIR,MAAM,CAACQ,YAAY,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE;IACnGR,MAAM,CAACO,YAAY,GAAG,oBAAoB;EAC5C;EAEA,IAAI,CAACR,MAAM,CAACU,aAAa,IAAIV,MAAM,CAACU,aAAa,GAAG,CAAC,EAAE;IACrDT,MAAM,CAACS,aAAa,GAAG,kCAAkC;EAC3D;;EAEA;EACA;EACA;;EAEA,OAAOT,MAAM;AACf,CAAC;AACD,eAAeF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}