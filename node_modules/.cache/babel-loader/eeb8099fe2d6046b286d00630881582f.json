{"ast":null,"code":"import axios from 'axios';\nimport { API_ROOT, _dispatch } from '../constants';\nexport { _dispatch };\nexport var USER_NOTIFICATION_COUNTER = 'USER_NOTIFICATION_COUNTER';\nvar ROOT_URL = API_ROOT;\nvar token = \"\";\nexport function getNotificationCounter(params) {\n  return function (dispatch) {\n    return axios(\"\".concat(ROOT_URL, \"/serviceprovider/getnotificationcounter\"), {\n      method: 'GET',\n      params: params\n    }).then(function (response) {\n      dispatch({\n        type: USER_NOTIFICATION_COUNTER,\n        payload: response.data.data.count\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n}\nexport function getNotification(params) {\n  return axios({\n    method: 'GET',\n    params: params,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/getnotification\")\n  });\n}\nexport function setReadStatus(props) {\n  return axios({\n    method: 'POST',\n    data: props,\n    url: \"\".concat(ROOT_URL, \"/serviceprovider/setreadstatus\")\n  });\n}","map":{"version":3,"names":["axios","API_ROOT","_dispatch","USER_NOTIFICATION_COUNTER","ROOT_URL","token","getNotificationCounter","params","dispatch","concat","method","then","response","type","payload","data","count","catch","error","console","log","getNotification","url","setReadStatus","props"],"sources":["/home/hardik/gatoes-admin-ui/src/actions/notifications.js"],"sourcesContent":["import axios from 'axios';\nimport { API_ROOT, _dispatch } from '../constants';\nexport {_dispatch};\nexport const USER_NOTIFICATION_COUNTER = 'USER_NOTIFICATION_COUNTER';\nconst ROOT_URL = API_ROOT;\nvar token = \"\";\n\nexport function getNotificationCounter(params){\n  return (dispatch) => {\n    return axios(`${ROOT_URL}/serviceprovider/getnotificationcounter`, {\n      method: 'GET',\n      params : params\n    })\n    .then(response => {\n      dispatch({\n        type: USER_NOTIFICATION_COUNTER,\n        payload: response.data.data.count\n      });\n    })\n    .catch((error) => {\n      console.log(error);\n    })\n  }\n}\n\n\nexport function getNotification(params) {\n  return axios({\n    method: 'GET',\n    params: params,\n    url: `${ROOT_URL}/serviceprovider/getnotification`,\n  });\n}\n\nexport function setReadStatus(props) {\n  return axios({\n    method: 'POST',\n    data: props,\n    url: `${ROOT_URL}/serviceprovider/setreadstatus`,\n  });\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,cAAc;AAClD,SAAQA,SAAS;AACjB,OAAO,IAAMC,yBAAyB,GAAG,2BAA2B;AACpE,IAAMC,QAAQ,GAAGH,QAAQ;AACzB,IAAII,KAAK,GAAG,EAAE;AAEd,OAAO,SAASC,sBAAsBA,CAACC,MAAM,EAAC;EAC5C,OAAO,UAACC,QAAQ,EAAK;IACnB,OAAOR,KAAK,IAAAS,MAAA,CAAIL,QAAQ,8CAA2C;MACjEM,MAAM,EAAE,KAAK;MACbH,MAAM,EAAGA;IACX,CAAC,CAAC,CACDI,IAAI,CAAC,UAAAC,QAAQ,EAAI;MAChBJ,QAAQ,CAAC;QACPK,IAAI,EAAEV,yBAAyB;QAC/BW,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACC;MAC9B,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC;AACH;AAGA,OAAO,SAASG,eAAeA,CAACd,MAAM,EAAE;EACtC,OAAOP,KAAK,CAAC;IACXU,MAAM,EAAE,KAAK;IACbH,MAAM,EAAEA,MAAM;IACde,GAAG,KAAAb,MAAA,CAAKL,QAAQ;EAClB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASmB,aAAaA,CAACC,KAAK,EAAE;EACnC,OAAOxB,KAAK,CAAC;IACXU,MAAM,EAAE,MAAM;IACdK,IAAI,EAAES,KAAK;IACXF,GAAG,KAAAb,MAAA,CAAKL,QAAQ;EAClB,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module"}